{"version":3,"file":"static/js/8488.c87fe233.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.scss?tag=calcite-progress&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/input-number.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/input-number.scss?tag=calcite-input-number&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/input/common/input.ts"],"sourcesContent":["/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-progress-background-color: Specifies the component's background color.\n* @prop --calcite-progress-fill-color: Specifies the component's fill color.\n* @prop --calcite-progress-text-color: Specifies the component's text color.\n*/\n\n@import \"../../assets/styles/animation\";\n\n:host {\n  @apply relative block w-full;\n}\n\n.track,\n.bar {\n  @apply absolute top-0;\n  block-size: 2px;\n}\n\n.track {\n  @apply z-default w-full overflow-hidden;\n  background-color: var(--calcite-progress-background-color, var(--calcite-color-border-3));\n}\n\n.bar {\n  @apply z-default;\n\n  background-color: var(--calcite-progress-fill-color, var(--calcite-color-brand));\n}\n\n@media (forced-colors: active) {\n  .track {\n    background-color: highlightText;\n  }\n  .bar {\n    background-color: linkText;\n  }\n}\n\n.indeterminate {\n  @apply w-1/5;\n  animation: looping-progress-bar-ani scale-duration(--calcite-internal-animation-timing-medium, 11) linear infinite;\n  &.calcite--rtl {\n    animation-name: looping-progress-bar-ani-rtl;\n  }\n}\n\n.reversed {\n  animation-direction: reverse;\n}\n\n.text {\n  @apply text-n2h px-0 pt-4 pb-0 text-center font-medium;\n  color: var(--calcite-progress-text-color, var(--calcite-color-text-2));\n}\n\n@keyframes looping-progress-bar-ani {\n  0% {\n    transform: translate3d(-100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(600%, 0, 0);\n  }\n}\n\n@keyframes looping-progress-bar-ani-rtl {\n  0% {\n    transform: translate3d(100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(-600%, 0, 0);\n  }\n}\n\n@include base-component();\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\n@Component({\n  tag: \"calcite-progress\",\n  styleUrl: \"progress.scss\",\n  shadow: true,\n})\nexport class Progress {\n  @Element() el: HTMLCalciteProgressElement;\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\" = \"determinate\";\n\n  /** When `type` is `\"determinate\"`, the component's progress value with a range of 0.0 - 1.0. */\n  @Prop() value = 0;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text: string;\n\n  /** When `true` and for `\"indeterminate\"` progress bars, reverses the animation direction. */\n  @Prop({ reflect: true }) reversed = false;\n\n  render(): VNode {\n    const isDeterminate = this.type === \"determinate\";\n    const barStyles = isDeterminate ? { width: `${this.value * 100}%` } : {};\n    const dir = getElementDir(this.el);\n    return (\n      <div\n        aria-label={this.label || this.text}\n        aria-valuemax={1}\n        aria-valuemin={0}\n        aria-valuenow={this.value}\n        role=\"progressbar\"\n      >\n        <div class=\"track\">\n          <div\n            class={{\n              bar: true,\n              indeterminate: this.type === \"indeterminate\",\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              reversed: this.reversed,\n            }}\n            style={barStyles}\n          />\n        </div>\n        {this.text ? <div class=\"text\">{this.text}</div> : null}\n      </div>\n    );\n  }\n}\n","export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const IDS = {\n  validationMessage: \"inputNumberValidationMessage\",\n};\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { Alignment, Scale, Status } from \"../interfaces\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"../input/interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport {\n  NumericInputComponent,\n  syncHiddenFormInput,\n  TextualInputComponent,\n} from \"../input/common/input\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, IDS, SLOTS } from \"./resources\";\nimport { InputNumberMessages } from \"./assets/input-number/t9n\";\n\n/**\n * @slot action - A slot for positioning a button next to the component.\n */\n@Component({\n  tag: \"calcite-input-number\",\n  styleUrl: \"input-number.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class InputNumber\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    NumericInputComponent,\n    T9nComponent,\n    TextualInputComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  @Watch(\"enterkeyhint\")\n  @Watch(\"inputmode\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\n   *\n   * @ignore\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() autofocus: boolean;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() enterKeyHint: string;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @futureBreaking Remove boolean type as it is not supported.\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() inputMode: string;\n\n  /** When `true`, restricts the component to integer numbers only and disables exponential notation. */\n  @Prop() integer = false;\n\n  /** Accessible name for the component's button or hyperlink. */\n  @Prop() label: string;\n\n  /** When `true`, the component is in the loading state and `calcite-progress` is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * Toggles locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value.\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity that the component's value must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /** Adds text to the end of the component.  */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputNumberMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputNumberMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (newValue === \"Infinity\" || newValue === \"-Infinity\") {\n        this.displayedValue = newValue;\n        this.previousEmittedNumberValue = newValue;\n        return;\n      }\n\n      this.setNumberValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : isValidNumber(newValue)\n              ? newValue\n              : this.previousValue || \"\",\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputNumberElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputNumber[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  private inputWrapperEl: HTMLDivElement;\n\n  private actionWrapperEl: HTMLDivElement;\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return this.clearable && this.value.length > 0;\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedNumberValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleWatcher(locale: string): void {\n    updateMessages(this, this.effectiveLocale);\n    numberStringFormatter.numberFormatOptions = {\n      locale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: false,\n    };\n  }\n\n  @State() defaultMessages: InputNumberMessages;\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n    await setUpMessages(this);\n\n    this.setPreviousEmittedNumberValue(this.value);\n    this.setPreviousNumberValue(this.value);\n\n    this.warnAboutInvalidNumberValue(this.value);\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      this.displayedValue = this.value;\n      this.previousEmittedNumberValue = this.value;\n    } else {\n      this.setNumberValue({\n        origin: \"connected\",\n        value: isValidNumber(this.value) ? this.value : \"\",\n      });\n    }\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setNumberValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed.\n   */\n  @Event({ cancelable: true }) calciteInputNumberInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputNumberChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.childNumberEl?.focus();\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    this.childNumberEl?.select();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const stepHandleInteger =\n      this.integer && this.step !== \"any\" ? Math.round(this.step) : this.step;\n    const inputStep = stepHandleInteger === \"any\" ? 1 : Math.abs(stepHandleInteger || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedNumberValue) {\n      this.calciteInputNumberChange.emit();\n      this.setPreviousEmittedNumberValue(this.value);\n    }\n  };\n\n  private inputNumberBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputNumberBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const composedPath = event.composedPath();\n\n    if (\n      !composedPath.includes(this.inputWrapperEl) ||\n      composedPath.includes(this.actionWrapperEl)\n    ) {\n      return;\n    }\n\n    this.setFocus();\n  };\n\n  private inputNumberFocusHandler = (): void => {\n    this.calciteInternalInputNumberFocus.emit();\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (\n        !isValidNumber(delocalizedValue) ||\n        (this.integer && (delocalizedValue.includes(\"e\") || delocalizedValue.includes(\".\")))\n      ) {\n        nativeEvent.preventDefault();\n      }\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    if (event.key === numberStringFormatter.decimal && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key) && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if (nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private nudgeButtonPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"number\", this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setNumberValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputNumberValue = (newInputValue: string): void => {\n    if (!this.childNumberEl) {\n      return;\n    }\n    this.childNumberEl.value = newInputValue;\n  };\n\n  private setPreviousEmittedNumberValue = (value: string): void => {\n    this.previousEmittedNumberValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return isValidNumber(value) ? value : \"\";\n  }\n\n  private setPreviousNumberValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setNumberValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    const isValueDeleted =\n      this.previousValue?.length > value.length || this.value?.length > value.length;\n\n    const valueHandleInteger = this.integer ? value.replace(/[e.]/g, \"\") : value;\n\n    const hasTrailingDecimalSeparator =\n      valueHandleInteger.charAt(valueHandleInteger.length - 1) === \".\";\n\n    const sanitizedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? valueHandleInteger\n        : sanitizeNumberString(valueHandleInteger);\n\n    const newValue =\n      value && !sanitizedValue\n        ? isValidNumber(this.previousValue)\n          ? this.previousValue\n          : \"\"\n        : sanitizedValue;\n\n    let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n    if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n      newLocalizedValue = addLocalizedTrailingDecimalZeros(\n        newLocalizedValue,\n        newValue,\n        numberStringFormatter,\n      );\n    }\n\n    // adds localized trailing decimal separator\n    this.displayedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n        : newLocalizedValue;\n\n    this.setPreviousNumberValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n    this.userChangedValue = origin === \"user\" && this.value !== newValue;\n    // don't sanitize the start of negative/decimal numbers, but\n    // don't set value to an invalid number\n    this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n\n    if (origin === \"direct\") {\n      this.setInputNumberValue(newLocalizedValue);\n      this.setPreviousEmittedNumberValue(newLocalizedValue);\n    }\n\n    if (nativeEvent) {\n      const calciteInputNumberInputEvent = this.calciteInputNumberInput.emit();\n      if (calciteInputNumberInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue = numberStringFormatter.localize(this.previousValue);\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputNumberKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const childEl = (\n      <input\n        aria-errormessage={IDS.validationMessage}\n        aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n        aria-label={getLabelText(this)}\n        autocomplete={this.autocomplete}\n        autofocus={this.el.autofocus ? true : null}\n        defaultValue={this.defaultValue}\n        disabled={this.disabled ? true : null}\n        enterKeyHint={this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\")}\n        inputMode={this.el.inputMode || this.el.getAttribute(\"inputmode\") || \"decimal\"}\n        key=\"localized-input\"\n        maxLength={this.maxLength}\n        minLength={this.minLength}\n        name={undefined}\n        onBlur={this.inputNumberBlurHandler}\n        onFocus={this.inputNumberFocusHandler}\n        onInput={this.inputNumberInputHandler}\n        onKeyDown={this.inputNumberKeyDownHandler}\n        onKeyUp={this.inputNumberKeyUpHandler}\n        placeholder={this.placeholder || \"\"}\n        readOnly={this.readOnly}\n        ref={this.setChildNumberElRef}\n        type=\"text\"\n        value={this.displayedValue}\n      />\n    );\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}\n            ref={(el) => (this.inputWrapperEl = el)}\n          >\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper} ref={(el) => (this.actionWrapperEl = el)}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.numberButtonType === \"vertical\" && !this.readOnly ? numberButtonsVertical : null}\n            {this.suffixText ? suffixText : null}\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-prefix-size: Specifies the component's prefix width.\n * @prop --calcite-input-suffix-size: Specifies the component's suffix width.\n */\n\n:host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n}\n\n@include disabled();\n\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply bg-foreground-1\n    box-border\n    flex\n    flex-1\n    font-inherit\n    font-normal\n    m-0\n    max-h-full\n    max-w-full\n    relative\n    rounded-none\n    text-color-1\n    text-ellipsis\n    w-full;\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n// states\ninput {\n  @apply text-color-1\n    border-color-input\n    border\n    border-solid;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n}\ninput:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ninput {\n  @apply focus-base;\n}\n\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input {\n    @apply border-color-danger;\n  }\n  & input:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block\n\n    z-default; // needed for firefox to display the icon properly\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-prefix-size, auto);\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-suffix-size, auto);\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & input {\n    text-align: end;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n    flex\n    cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","export type InputComponent = NumericInputComponent | TextualInputComponent | DateTimeInputComponent;\n\nexport interface DateTimeInputComponent {\n  min: string;\n  max: string;\n}\n\nexport interface NumericInputComponent {\n  min: number;\n  max: number;\n  step: number | \"any\";\n}\n\nexport interface TextualInputComponent {\n  pattern?: string;\n  minLength: number;\n  maxLength: number;\n}\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\n\nfunction updateConstraintValidation(\n  inputComponent: InputComponent,\n  input: HTMLInputElement,\n  propName: string,\n  matchesType: boolean,\n): void {\n  const attributeName = propName.toLowerCase();\n  const value = inputComponent[propName];\n\n  if (matchesType && value != null) {\n    input.setAttribute(attributeName, `${value}`);\n  } else {\n    // we remove the attribute to ensure validation-constraints are properly reset\n    input.removeAttribute(attributeName);\n  }\n}\n\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nexport function syncHiddenFormInput(\n  type: HTMLInputElement[\"type\"] | \"textarea\",\n  inputComponent: InputComponent,\n  hiddenFormInput: HTMLInputElement,\n): void {\n  hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n\n  const isMinMaxStepType = minMaxStepTypes.includes(type);\n  const numericInputComponent = inputComponent as NumericInputComponent;\n\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n\n  const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n\n  const textualInputComponent = inputComponent as TextualInputComponent;\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n\n  const isPatternType = patternTypes.includes(type);\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n"],"names":["Progress","proxyCustomElement","HTMLElement","render","barStyles","this","type","width","value","dir","getElementDir","el","h","key","label","text","role","class","bar","indeterminate","CSS_UTILITY","rtl","reversed","style","CSS","IDS","SLOTS","InputNumber","previousValueOrigin","mutationObserver","createObserver","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","clearInputValue","preventDefault","submitForm","nativeEvent","setNumberValue","committing","origin","emitChangeIfUserModified","previousEmittedNumberValue","calciteInputNumberChange","emit","setPreviousEmittedNumberValue","inputNumberBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputNumberBlur","clickHandler","composedPath","includes","inputWrapperEl","actionWrapperEl","setFocus","inputNumberFocusHandler","calciteInternalInputNumberFocus","inputNumberInputHandler","target","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","integer","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","decimal","indexOf","test","split","length","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","incrementOrDecrementNumberValue","firstValueNudge","setInterval","nudgeButtonPointerUpHandler","isPrimaryPointerButton","nudgeButtonPointerOutHandler","nudgeButtonPointerDownHandler","dataset","adjustment","onHiddenFormInputInput","name","stopPropagation","setChildNumberElRef","setInputNumberValue","newInputValue","normalizeValue","setPreviousNumberValue","previousValue","_ref","isValueDeleted","valueHandleInteger","replace","hasTrailingDecimalSeparator","charAt","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","calciteInputNumberInput","inputNumberKeyUpHandler","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","maxWatcher","max","toString","minWatcher","min","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","requestedIcon","setRequestedIcon","icon","clearable","effectiveLocaleWatcher","updateMessages","connectedCallback","connectLocalized","connectMessages","inlineEditableEl","closest","editingEnabled","connectLabel","connectForm","observe","childList","addEventListener","internalHiddenInputInputEvent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","componentWillLoad","setUpLoadableComponent","setUpMessages","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","componentFocusable","focus","selectText","select","onLabelClick","stepHandleInteger","step","Math","round","inputStep","abs","nudgedValue","BigDecimal","add","finalValue","isNaN","subtract","isNegative","syncHiddenFormInput","input","slottedActionEl","getSlotted","getAttribute","slottedActionElDisabledInternally","setAttribute","removeAttribute","console","warn","loader","messages","loading","inputClearButton","clear","onClick","tabIndex","scale","getIconScale","iconEl","flipRtl","iconFlipRtl","isHorizontalNumberButton","numberButtonType","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","prefixText","suffixText","childEl","toAriaBoolean","status","getLabelText","autocomplete","autofocus","defaultValue","enterKeyHint","inputMode","maxLength","minLength","undefined","onBlur","onFocus","onInput","onKeyDown","onKeyUp","placeholder","ref","Host","InteractiveContainer","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","id","message","minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","propName","matchesType","attributeName","toLowerCase","hiddenFormInput","isMinMaxStepType","numericInputComponent","isMinMaxLengthType","textualInputComponent"],"sourceRoot":""}