{"version":3,"file":"static/js/8723.bf856d58.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/functional/ExpandToggle.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/action-bar.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/action-bar.scss?tag=calcite-action-bar&encapsulation=shadow"],"sourcesContent":["import { forceUpdate } from \"@stencil/core\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Layout } from \"../interfaces\";\n\nconst groupBufferPx = 2;\n\nconst getAverage = (arr: number[]) => arr.reduce((p, c) => p + c, 0) / arr.length;\n\nexport const geActionDimensions = (\n  actions: HTMLCalciteActionElement[],\n): { actionWidth: number; actionHeight: number } => {\n  const actionsNotSlotted = actions.filter((action) => action.slot !== ACTION_GROUP_SLOTS.menuActions);\n  const actionLen = actionsNotSlotted?.length;\n  return {\n    actionWidth: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientWidth || 0)) : 0,\n    actionHeight: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientHeight || 0)) : 0,\n  };\n};\n\nconst getMaxActionCount = ({\n  width,\n  actionWidth,\n  layout,\n  height,\n  actionHeight,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  height: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  groupCount: number;\n}): number => {\n  const maxContainerPx = layout === \"horizontal\" ? width : height;\n  const avgItemPx = layout === \"horizontal\" ? actionWidth : actionHeight;\n  return Math.floor((maxContainerPx - groupCount * groupBufferPx) / avgItemPx);\n};\n\nexport const getOverflowCount = ({\n  layout,\n  actionCount,\n  actionWidth,\n  width,\n  actionHeight,\n  height,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  actionCount: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  height: number;\n  groupCount: number;\n}): number => {\n  return Math.max(actionCount - getMaxActionCount({ width, actionWidth, layout, height, actionHeight, groupCount }), 0);\n};\n\nexport const queryActions = (el: HTMLElement): HTMLCalciteActionElement[] => {\n  return Array.from(el.querySelectorAll(\"calcite-action\")).filter((action) =>\n    action.closest(\"calcite-action-menu\") ? action.slot === ACTION_MENU_SLOTS.trigger : true,\n  );\n};\n\nexport const overflowActions = ({\n  actionGroups,\n  expanded,\n  overflowCount,\n}: {\n  actionGroups: HTMLCalciteActionGroupElement[];\n  expanded: boolean;\n  overflowCount: number;\n}): void => {\n  let needToSlotCount = overflowCount;\n  actionGroups.reverse().forEach((group) => {\n    let slottedWithinGroupCount = 0;\n\n    const groupActions = queryActions(group).reverse();\n\n    groupActions.forEach((groupAction) => {\n      if (groupAction.slot === ACTION_GROUP_SLOTS.menuActions) {\n        groupAction.removeAttribute(\"slot\");\n        groupAction.textEnabled = expanded;\n      }\n    });\n\n    if (needToSlotCount > 0) {\n      groupActions.some((groupAction) => {\n        const unslottedActions = groupActions.filter((action) => !action.slot);\n\n        if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest(\"calcite-action-menu\")) {\n          groupAction.textEnabled = true;\n          groupAction.setAttribute(\"slot\", ACTION_GROUP_SLOTS.menuActions);\n          slottedWithinGroupCount++;\n\n          if (slottedWithinGroupCount > 1) {\n            needToSlotCount--;\n          }\n        }\n\n        return needToSlotCount < 1;\n      });\n    }\n\n    forceUpdate(group);\n  });\n};\n","import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { queryActions } from \"../action-bar/utils\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { Position, Scale } from \"../interfaces\";\n\ninterface ExpandToggleProps {\n  expanded: boolean;\n  expandText: string;\n  collapseText: string;\n  expandLabel: string;\n  collapseLabel: string;\n  el: HTMLElement;\n  position: Position;\n  tooltip?: HTMLCalciteTooltipElement;\n  toggle: () => void;\n  ref?: (el: HTMLElement) => void;\n  scale?: Scale;\n}\n\nconst ICONS = {\n  chevronsLeft: \"chevrons-left\",\n  chevronsRight: \"chevrons-right\",\n} as const;\n\nfunction getCalcitePosition(position: Position, el: HTMLElement): Position {\n  return position || el.closest(\"calcite-shell-panel\")?.position || \"start\";\n}\n\nexport function toggleChildActionText({\n  el,\n  expanded,\n}: {\n  el: HTMLElement;\n  expanded: boolean;\n}): void {\n  queryActions(el)\n    .filter((el) => el.slot !== ACTION_GROUP_SLOTS.menuActions)\n    .forEach((action) => (action.textEnabled = expanded));\n  el.querySelectorAll(\"calcite-action-group, calcite-action-menu\").forEach(\n    (el: HTMLCalciteActionMenuElement | HTMLCalciteActionGroupElement) => (el.expanded = expanded),\n  );\n}\n\nconst setTooltipReference = ({\n  tooltip,\n  referenceElement,\n  expanded,\n  ref,\n}: {\n  tooltip: HTMLCalciteTooltipElement;\n  referenceElement: HTMLCalciteActionElement;\n  expanded: boolean;\n  ref?: (el: HTMLElement) => void;\n}): HTMLCalciteActionElement => {\n  if (tooltip) {\n    tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;\n  }\n\n  if (ref) {\n    ref(referenceElement);\n  }\n\n  return referenceElement;\n};\n\nexport const ExpandToggle: FunctionalComponent<ExpandToggleProps> = ({\n  expanded,\n  expandText,\n  collapseText,\n  expandLabel,\n  collapseLabel,\n  toggle,\n  el,\n  position,\n  tooltip,\n  ref,\n  scale,\n}): VNode => {\n  const rtl = getElementDir(el) === \"rtl\";\n\n  const text = expanded ? collapseText : expandText;\n  const label = expanded ? collapseLabel : expandLabel;\n  const icons = [ICONS.chevronsLeft, ICONS.chevronsRight];\n\n  if (rtl) {\n    icons.reverse();\n  }\n\n  const end = getCalcitePosition(position, el) === \"end\";\n  const expandIcon = end ? icons[1] : icons[0];\n  const collapseIcon = end ? icons[0] : icons[1];\n\n  const actionNode = (\n    <calcite-action\n      icon={expanded ? expandIcon : collapseIcon}\n      id=\"expand-toggle\"\n      label={label}\n      onClick={toggle}\n      ref={(referenceElement): HTMLCalciteActionElement =>\n        setTooltipReference({ tooltip, referenceElement, expanded, ref })\n      }\n      scale={scale}\n      text={text}\n      textEnabled={expanded}\n      title={!expanded && !tooltip ? text : null}\n    />\n  );\n\n  return actionNode;\n};\n","export const CSS = {\n  actionGroupEnd: \"action-group--end\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  bottomActions: \"bottom-actions\",\n  expandTooltip: \"expand-tooltip\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ExpandToggle, toggleChildActionText } from \"../functional/ExpandToggle\";\nimport { Layout, Position, Scale } from \"../interfaces\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { DEBOUNCE } from \"../../utils/resources\";\nimport { ActionBarMessages } from \"./assets/action-bar/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { geActionDimensions, getOverflowCount, overflowActions, queryActions } from \"./utils\";\n\n/**\n * @slot - A slot for adding `calcite-action`s that will appear at the top of the component.\n * @slot bottom-actions - [Deprecated] Use the `\"actions-end\"` slot instead. A slot for adding `calcite-action`s that will appear at the bottom of the component, above the collapse/expand button.\n * @slot actions-end - A slot for adding `calcite-action`s that will appear at the end of the component, prior to the collapse/expand button.\n * @slot expand-tooltip - A slot to set the `calcite-tooltip` for the expand toggle.\n */\n@Component({\n  tag: \"calcite-action-bar\",\n  styleUrl: \"action-bar.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ActionBar\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the accessible label for the last `calcite-action-group`.\n   */\n  @Prop() actionsEndGroupLabel: string;\n\n  /**\n   * When `true`, the expand-toggling behavior is disabled.\n   */\n  @Prop({ reflect: true }) expandDisabled = false;\n\n  @Watch(\"expandDisabled\")\n  expandHandler(): void {\n    this.overflowActions();\n  }\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  /**\n   *  Specifies the layout direction of the actions.\n   */\n  @Prop({ reflect: true }) layout: Extract<\"horizontal\" | \"vertical\", Layout> = \"vertical\";\n\n  @Watch(\"layout\")\n  layoutHandler(): void {\n    this.updateGroups();\n  }\n\n  /**\n   * Disables automatically overflowing `calcite-action`s that won't fit into menus.\n   */\n  @Prop({ reflect: true }) overflowActionsDisabled = false;\n\n  @Watch(\"overflowActionsDisabled\")\n  overflowDisabledHandler(overflowActionsDisabled: boolean): void {\n    if (overflowActionsDisabled) {\n      this.resizeObserver?.disconnect();\n      return;\n    }\n\n    this.resizeObserver?.observe(this.el);\n    this.overflowActions();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Arranges the component depending on the element's `dir` property.\n   */\n  @Prop({ reflect: true }) position: Extract<\"start\" | \"end\", Position>;\n\n  /**\n   * Specifies the size of the expand `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionBarMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionBarMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `expanded` property is toggled.\n   */\n  @Event({ cancelable: false }) calciteActionBarToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionBarElement;\n\n  mutationObserver = createObserver(\"mutation\", () => {\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  });\n\n  resizeObserver = createObserver(\"resize\", (entries) => this.resizeHandlerEntries(entries));\n\n  @State() effectiveLocale: string;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasBottomActions = false;\n\n  @State() expandTooltip: HTMLCalciteTooltipElement;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionBarMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    const { el, expanded } = this;\n\n    setComponentLoaded(this);\n    toggleChildActionText({ el, expanded });\n    this.overflowActions();\n  }\n\n  connectedCallback(): void {\n    const { el, expanded } = this;\n\n    connectLocalized(this);\n    connectMessages(this);\n    toggleChildActionText({ el, expanded });\n\n    this.mutationObserver?.observe(el, { childList: true, subtree: true });\n\n    if (!this.overflowActionsDisabled) {\n      this.resizeObserver?.observe(el);\n    }\n\n    this.overflowActions();\n    connectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectConditionalSlotComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Overflows actions that won't fit into menus.\n   *\n   * @internal\n   */\n  @Method()\n  async overflowActions(): Promise<void> {\n    this.resize({ width: this.el.clientWidth, height: this.el.clientHeight });\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  actionMenuOpenHandler = (event: CustomEvent<void>): void => {\n    if ((event.target as HTMLCalciteActionGroupElement).menuOpen) {\n      const composedPath = event.composedPath();\n      Array.from(this.el.querySelectorAll(\"calcite-action-group\")).forEach((group) => {\n        if (!composedPath.includes(group)) {\n          group.menuOpen = false;\n        }\n      });\n    }\n  };\n\n  resizeHandlerEntries = (entries: ResizeObserverEntry[]): void => {\n    entries.forEach(this.resizeHandler);\n  };\n\n  resizeHandler = (entry: ResizeObserverEntry): void => {\n    const { width, height } = entry.contentRect;\n    this.resize({ width, height });\n  };\n\n  private resize = debounce(({ width, height }: { width: number; height: number }): void => {\n    const { el, expanded, expandDisabled, layout, overflowActionsDisabled } = this;\n\n    if (\n      overflowActionsDisabled ||\n      (layout === \"vertical\" && !height) ||\n      (layout === \"horizontal\" && !width)\n    ) {\n      return;\n    }\n\n    const actions = queryActions(el);\n    const actionCount = expandDisabled ? actions.length : actions.length + 1;\n    const actionGroups = Array.from(el.querySelectorAll(\"calcite-action-group\"));\n\n    this.setGroupLayout(actionGroups);\n\n    const groupCount =\n      this.hasActionsEnd || this.hasBottomActions || !expandDisabled\n        ? actionGroups.length + 1\n        : actionGroups.length;\n\n    const { actionHeight, actionWidth } = geActionDimensions(actions);\n\n    const overflowCount = getOverflowCount({\n      layout,\n      actionCount,\n      actionHeight,\n      actionWidth,\n      height,\n      width,\n      groupCount,\n    });\n\n    overflowActions({\n      actionGroups,\n      expanded,\n      overflowCount,\n    });\n  }, DEBOUNCE.resize);\n\n  toggleExpand = (): void => {\n    this.expanded = !this.expanded;\n    this.calciteActionBarToggle.emit();\n  };\n\n  updateGroups(): void {\n    this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\")));\n  }\n\n  setGroupLayout(groups: HTMLCalciteActionGroupElement[]): void {\n    groups.forEach((group) => (group.layout = this.layout));\n  }\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const groups = slotChangeGetAssignedElements(event).filter(\n      (el): el is HTMLCalciteActionGroupElement => el.matches(\"calcite-action-group\"),\n    );\n\n    this.setGroupLayout(groups);\n  };\n\n  handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  handleBottomActionsSlotChange = (event: Event): void => {\n    this.hasBottomActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = slotChangeGetAssignedElements(event).filter(\n      (el): el is HTMLCalciteTooltipElement => el?.matches(\"calcite-tooltip\"),\n    );\n\n    this.expandTooltip = tooltips[0];\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderBottomActionGroup(): VNode {\n    const {\n      expanded,\n      expandDisabled,\n      el,\n      position,\n      toggleExpand,\n      scale,\n      layout,\n      messages,\n      actionsEndGroupLabel,\n      overlayPositioning,\n    } = this;\n\n    const expandToggleNode = !expandDisabled ? (\n      <ExpandToggle\n        collapseLabel={messages.collapseLabel}\n        collapseText={messages.collapse}\n        el={el}\n        expandLabel={messages.expandLabel}\n        expandText={messages.expand}\n        expanded={expanded}\n        position={position}\n        scale={scale}\n        toggle={toggleExpand}\n        tooltip={this.expandTooltip}\n      />\n    ) : null;\n\n    return (\n      <calcite-action-group\n        class={CSS.actionGroupEnd}\n        hidden={this.expandDisabled && !(this.hasActionsEnd || this.hasBottomActions)}\n        label={actionsEndGroupLabel}\n        layout={layout}\n        overlayPositioning={overlayPositioning}\n        scale={scale}\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        <slot name={SLOTS.bottomActions} onSlotchange={this.handleBottomActionsSlotChange} />\n        <slot name={SLOTS.expandTooltip} onSlotchange={this.handleTooltipSlotChange} />\n        {expandToggleNode}\n      </calcite-action-group>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host onCalciteActionMenuOpen={this.actionMenuOpenHandler}>\n        <slot onSlotchange={this.handleDefaultSlotChange} />\n        {this.renderBottomActionGroup()}\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-bar-expanded-max-width: When `layout` is `\"vertical\"`, specifies the component's maximum width.\n * @prop --calcite-action-bar-items-space: Specifies the space between slotted components in the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply pointer-events-auto\n    inline-flex\n    self-stretch;\n\n  gap: var(--calcite-action-bar-items-space, 0);\n}\n\n:host([layout=\"vertical\"]) {\n  @apply flex-col;\n\n  &:host([overflow-actions-disabled]) {\n    overflow-y: auto;\n  }\n\n  &:host([expanded]) {\n    max-inline-size: var(--calcite-action-bar-expanded-max-width, auto);\n  }\n\n  .action-group--end {\n    margin-block-start: auto;\n  }\n\n  ::slotted(calcite-action-group:not(:last-of-type)) {\n    border-block-end-width: var(--calcite-border-width-sm);\n  }\n}\n\n:host([layout=\"horizontal\"]) {\n  @apply flex-row;\n\n  &:host([overflow-actions-disabled]) {\n    overflow-x: auto;\n  }\n\n  .action-group--end {\n    @apply ms-auto;\n  }\n\n  ::slotted(calcite-action-group:not(:last-of-type)) {\n    border-inline-end-width: var(--calcite-border-width-sm);\n  }\n}\n\n.action-group--end {\n  @apply justify-end;\n}\n\n@include base-component();\n"],"names":["getAverage","arr","reduce","p","c","length","getOverflowCount","_ref2","layout","actionCount","actionWidth","width","actionHeight","height","groupCount","Math","max","_ref","maxContainerPx","avgItemPx","floor","getMaxActionCount","queryActions","el","Array","from","querySelectorAll","filter","action","closest","slot","SLOTS","trigger","ICONS","toggleChildActionText","_ref4","expanded","SLOTS$1","menuActions","forEach","textEnabled","ExpandToggle","_ref6","expandText","collapseText","expandLabel","collapseLabel","toggle","position","tooltip","ref","scale","rtl","getElementDir","text","label","icons","reverse","end","getCalcitePosition","expandIcon","collapseIcon","actionNode","h","icon","id","onClick","referenceElement","_ref5","setTooltipReference","title","CSS","ActionBar","proxyCustomElement","HTMLElement","mutationObserver","createObserver","this","overflowActions","resizeObserver","entries","resizeHandlerEntries","actionMenuOpenHandler","event","target","menuOpen","composedPath","group","includes","resizeHandler","entry","contentRect","resize","debounce","expandDisabled","overflowActionsDisabled","actions","actionGroups","setGroupLayout","hasActionsEnd","hasBottomActions","actionsNotSlotted","actionLen","map","clientWidth","clientHeight","geActionDimensions","_ref3","overflowCount","needToSlotCount","slottedWithinGroupCount","groupActions","groupAction","removeAttribute","some","unslottedActions","setAttribute","forceUpdate","DEBOUNCE","toggleExpand","calciteActionBarToggle","emit","handleDefaultSlotChange","groups","slotChangeGetAssignedElements","matches","handleActionsEndSlotChange","slotChangeHasAssignedElement","handleBottomActionsSlotChange","handleTooltipSlotChange","tooltips","expandTooltip","expandHandler","expandedHandler","layoutHandler","updateGroups","overflowDisabledHandler","disconnect","observe","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","componentDidLoad","setComponentLoaded","connectedCallback","connectLocalized","connectMessages","childList","subtree","connectConditionalSlotComponent","componentWillLoad","setUpLoadableComponent","setUpMessages","disconnectedCallback","disconnectConditionalSlotComponent","disconnectLocalized","disconnectMessages","setFocus","componentFocusable","focusFirstTabbable","renderBottomActionGroup","messages","actionsEndGroupLabel","overlayPositioning","expandToggleNode","collapse","expand","class","hidden","name","onSlotchange","render","Host","key","onCalciteActionMenuOpen"],"sourceRoot":""}