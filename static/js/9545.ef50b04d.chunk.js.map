{"version":3,"file":"static/js/9545.ef50b04d.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.scss?tag=calcite-progress&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input/input.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input/input.scss?tag=calcite-input&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/input/common/input.ts"],"sourcesContent":["/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-progress-background-color: Specifies the component's background color.\n* @prop --calcite-progress-fill-color: Specifies the component's fill color.\n* @prop --calcite-progress-text-color: Specifies the component's text color.\n*/\n\n@import \"../../assets/styles/animation\";\n\n:host {\n  @apply relative block w-full;\n}\n\n.track,\n.bar {\n  @apply absolute top-0;\n  block-size: 2px;\n}\n\n.track {\n  @apply z-default w-full overflow-hidden;\n  background-color: var(--calcite-progress-background-color, var(--calcite-color-border-3));\n}\n\n.bar {\n  @apply z-default;\n\n  background-color: var(--calcite-progress-fill-color, var(--calcite-color-brand));\n}\n\n@media (forced-colors: active) {\n  .track {\n    background-color: highlightText;\n  }\n  .bar {\n    background-color: linkText;\n  }\n}\n\n.indeterminate {\n  @apply w-1/5;\n  animation: looping-progress-bar-ani scale-duration(--calcite-internal-animation-timing-medium, 11) linear infinite;\n  &.calcite--rtl {\n    animation-name: looping-progress-bar-ani-rtl;\n  }\n}\n\n.reversed {\n  animation-direction: reverse;\n}\n\n.text {\n  @apply text-n2h px-0 pt-4 pb-0 text-center font-medium;\n  color: var(--calcite-progress-text-color, var(--calcite-color-text-2));\n}\n\n@keyframes looping-progress-bar-ani {\n  0% {\n    transform: translate3d(-100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(600%, 0, 0);\n  }\n}\n\n@keyframes looping-progress-bar-ani-rtl {\n  0% {\n    transform: translate3d(100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(-600%, 0, 0);\n  }\n}\n\n@include base-component();\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\n@Component({\n  tag: \"calcite-progress\",\n  styleUrl: \"progress.scss\",\n  shadow: true,\n})\nexport class Progress {\n  @Element() el: HTMLCalciteProgressElement;\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\" = \"determinate\";\n\n  /** When `type` is `\"determinate\"`, the component's progress value with a range of 0.0 - 1.0. */\n  @Prop() value = 0;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text: string;\n\n  /** When `true` and for `\"indeterminate\"` progress bars, reverses the animation direction. */\n  @Prop({ reflect: true }) reversed = false;\n\n  render(): VNode {\n    const isDeterminate = this.type === \"determinate\";\n    const barStyles = isDeterminate ? { width: `${this.value * 100}%` } : {};\n    const dir = getElementDir(this.el);\n    return (\n      <div\n        aria-label={this.label || this.text}\n        aria-valuemax={1}\n        aria-valuemin={0}\n        aria-valuenow={this.value}\n        role=\"progressbar\"\n      >\n        <div class=\"track\">\n          <div\n            class={{\n              bar: true,\n              indeterminate: this.type === \"indeterminate\",\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              reversed: this.reversed,\n            }}\n            style={barStyles}\n          />\n        </div>\n        {this.text ? <div class=\"text\">{this.text}</div> : null}\n      </div>\n    );\n  }\n}\n","export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const IDS = {\n  validationMessage: \"inputValidationMessage\",\n};\n\nexport const INPUT_TYPE_ICONS = {\n  tel: \"phone\",\n  password: \"lock\",\n  email: \"email-address\",\n  date: \"calendar\",\n  time: \"clock\",\n  search: \"search\",\n} as const;\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { Scale, Status, Alignment } from \"../interfaces\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { InputMessages } from \"./assets/input/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"./interfaces\";\nimport { CSS, IDS, INPUT_TYPE_ICONS, SLOTS } from \"./resources\";\nimport { NumericInputComponent, syncHiddenFormInput, TextualInputComponent } from \"./common/input\";\n\n/**\n * @slot action - A slot for positioning a `calcite-button` next to the component.\n */\n@Component({\n  tag: \"calcite-input\",\n  styleUrl: \"input.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Input\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    T9nComponent,\n    LocalizedComponent,\n    LoadableComponent,\n    NumericInputComponent,\n    TextualInputComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  @Watch(\"enterkeyhint\")\n  @Watch(\"inputmode\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\n   *\n   * @ignore\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() autofocus: boolean;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value. The clear button shows by default for `\"search\"`, `\"time\"`, and `\"date\"` types, and will not display for the `\"textarea\"` type.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() enterKeyHint: string;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon.\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() inputMode: string;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** When `true`, a busy indicator is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * When `true`, uses locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value for type \"number\".\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value for `type=\"number\"`.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons for `type=\"number\"`. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity the component's `value` must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /**\n   * Specifies a regex pattern the component's `value` must match for validation.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() pattern: string;\n\n  /**\n   * Specifies a comma separated list of unique file type specifiers for limiting accepted file types.\n   * This property only has an effect when `type` is \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() accept: string;\n\n  /**\n   * When `true`, the component can accept more than one value.\n   * This property only has an effect when `type` is \"email\" or \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple)\n   */\n  @Prop() multiple = false;\n\n  /** Adds text to the end of the component. */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /**\n   * Specifies the component type.\n   *\n   * Note that the following `type`s add type-specific icons by default: `\"date\"`, `\"email\"`, `\"password\"`, `\"search\"`, `\"tel\"`, `\"time\"`.\n   */\n  @Prop({ reflect: true }) type:\n    | \"color\"\n    | \"date\"\n    | \"datetime-local\"\n    | \"email\"\n    | \"file\"\n    | \"image\"\n    | \"month\"\n    | \"number\"\n    | \"password\"\n    | \"search\"\n    | \"tel\"\n    | \"text\"\n    | \"textarea\"\n    | \"time\"\n    | \"url\"\n    | \"week\" = \"text\";\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * When `type` is `\"file\"`, specifies the component's selected files.\n   *\n   * @mdn https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/files\n   */\n  @Prop() files: FileList | undefined;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (this.type === \"number\" && (newValue === \"Infinity\" || newValue === \"-Infinity\")) {\n        this.displayedValue = newValue;\n        this.previousEmittedValue = newValue;\n        return;\n      }\n\n      this.setValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : this.type === \"number\"\n              ? isValidNumber(newValue)\n                ? newValue\n                : this.previousValue || \"\"\n              : newValue,\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  @Watch(\"type\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Input[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  private inputWrapperEl: HTMLDivElement;\n\n  private actionWrapperEl: HTMLDivElement;\n\n  /** keep track of the rendered child type */\n  private childEl?: HTMLInputElement | HTMLTextAreaElement;\n\n  /** keep track of the rendered child type */\n  private childElType?: \"input\" | \"textarea\" = \"input\";\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return !this.isTextarea && (this.clearable || this.type === \"search\") && this.value?.length > 0;\n  }\n\n  get isTextarea(): boolean {\n    return this.childElType === \"textarea\";\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() defaultMessages: InputMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.childElType = this.type === \"textarea\" ? \"textarea\" : \"input\";\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n    await setUpMessages(this);\n\n    this.setPreviousEmittedValue(this.value);\n    this.setPreviousValue(this.value);\n\n    if (this.type === \"number\") {\n      if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n        this.displayedValue = this.value;\n        this.previousEmittedValue = this.value;\n      } else {\n        this.warnAboutInvalidNumberValue(this.value);\n        this.setValue({\n          origin: \"connected\",\n          value: isValidNumber(this.value) ? this.value : \"\",\n        });\n      }\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (this.type === \"number\" && property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed.\n   */\n  @Event({ cancelable: true }) calciteInputInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    if (this.type === \"number\") {\n      this.childNumberEl?.focus();\n    } else {\n      this.childEl?.focus();\n    }\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    if (this.type === \"number\") {\n      this.childNumberEl?.select();\n    } else {\n      this.childEl?.select();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const inputStep = this.step === \"any\" ? 1 : Math.abs(this.step || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedValue) {\n      this.calciteInputChange.emit();\n      this.setPreviousEmittedValue(this.value);\n    }\n  };\n\n  private inputBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const composedPath = event.composedPath();\n\n    if (\n      !composedPath.includes(this.inputWrapperEl) ||\n      composedPath.includes(this.actionWrapperEl)\n    ) {\n      return;\n    }\n\n    this.setFocus();\n  };\n\n  private inputFocusHandler = (): void => {\n    this.calciteInternalInputFocus.emit();\n  };\n\n  private inputChangeHandler = (): void => {\n    if (this.type === \"file\") {\n      this.files = (this.childEl as HTMLInputElement).files;\n    }\n  };\n\n  private inputInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    this.setValue({\n      nativeEvent,\n      origin: \"user\",\n      value: (nativeEvent.target as HTMLInputElement).value,\n    });\n  };\n\n  private inputKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    if (event.key === \"Enter\") {\n      this.emitChangeIfUserModified();\n    }\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (!isValidNumber(delocalizedValue)) {\n        nativeEvent.preventDefault();\n      }\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.type !== \"number\" || this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    if (event.key === numberStringFormatter.decimal) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key)) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if ((nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) || this.type !== \"number\") {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private numberButtonPointerUpAndOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private numberButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(this.type, this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildElRef = (el: HTMLInputElement | HTMLTextAreaElement) => {\n    this.childEl = el;\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputValue = (newInputValue: string): void => {\n    if (this.type === \"text\" && !this.childEl) {\n      return;\n    }\n    if (this.type === \"number\" && !this.childNumberEl) {\n      return;\n    }\n    this[`child${this.type === \"number\" ? \"Number\" : \"\"}El`].value = newInputValue;\n  };\n\n  private setPreviousEmittedValue = (value: string): void => {\n    this.previousEmittedValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return this.type === \"number\" ? (isValidNumber(value) ? value : \"\") : value;\n  }\n\n  private setPreviousValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    this.setPreviousValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n\n    if (this.type === \"number\") {\n      numberStringFormatter.numberFormatOptions = {\n        locale: this.effectiveLocale,\n        numberingSystem: this.numberingSystem,\n        useGrouping: this.groupSeparator,\n        signDisplay: \"never\",\n      };\n\n      const isValueDeleted =\n        this.previousValue?.length > value.length || this.value?.length > value.length;\n      const hasTrailingDecimalSeparator = value.charAt(value.length - 1) === \".\";\n      const sanitizedValue =\n        hasTrailingDecimalSeparator && isValueDeleted ? value : sanitizeNumberString(value);\n\n      const newValue =\n        value && !sanitizedValue\n          ? isValidNumber(this.previousValue)\n            ? this.previousValue\n            : \"\"\n          : sanitizedValue;\n\n      let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n      if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n        newLocalizedValue = addLocalizedTrailingDecimalZeros(\n          newLocalizedValue,\n          newValue,\n          numberStringFormatter,\n        );\n      }\n\n      // adds localized trailing decimal separator\n      this.displayedValue =\n        hasTrailingDecimalSeparator && isValueDeleted\n          ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n          : newLocalizedValue;\n\n      this.userChangedValue = origin === \"user\" && this.value !== newValue;\n      // don't sanitize the start of negative/decimal numbers, but\n      // don't set value to an invalid number\n      this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n    } else {\n      this.userChangedValue = origin === \"user\" && this.value !== value;\n      this.value = value;\n    }\n\n    if (origin === \"direct\") {\n      this.setInputValue(value);\n      this.previousEmittedValue = value;\n    }\n\n    if (nativeEvent) {\n      const calciteInputInputEvent = this.calciteInputInput.emit();\n      if (calciteInputInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue =\n          this.type === \"number\"\n            ? numberStringFormatter.localize(this.previousValue)\n            : this.previousValue;\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (this.type === \"number\" && value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const autofocus = this.el.autofocus || this.el.hasAttribute(\"autofocus\") ? true : null;\n    const enterKeyHint = this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\");\n    const inputMode = this.el.inputMode || this.el.getAttribute(\"inputmode\");\n\n    const localeNumberInput =\n      this.type === \"number\" ? (\n        <input\n          accept={this.accept}\n          aria-errormessage={IDS.validationMessage}\n          aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n          aria-label={getLabelText(this)}\n          autocomplete={this.autocomplete}\n          autofocus={autofocus}\n          defaultValue={this.defaultValue}\n          disabled={this.disabled ? true : null}\n          enterKeyHint={enterKeyHint}\n          inputMode={inputMode}\n          key=\"localized-input\"\n          maxLength={this.maxLength}\n          minLength={this.minLength}\n          multiple={this.multiple}\n          name={undefined}\n          onBlur={this.inputBlurHandler}\n          onFocus={this.inputFocusHandler}\n          onInput={this.inputNumberInputHandler}\n          onKeyDown={this.inputNumberKeyDownHandler}\n          onKeyUp={this.inputKeyUpHandler}\n          pattern={this.pattern}\n          placeholder={this.placeholder || \"\"}\n          readOnly={this.readOnly}\n          ref={this.setChildNumberElRef}\n          type=\"text\"\n          value={this.displayedValue}\n        />\n      ) : null;\n\n    const childEl =\n      this.type !== \"number\"\n        ? [\n            <this.childElType\n              accept={this.accept}\n              aria-errormessage={IDS.validationMessage}\n              aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n              aria-label={getLabelText(this)}\n              autocomplete={this.autocomplete}\n              autofocus={autofocus}\n              class={{\n                [CSS.editingEnabled]: this.editingEnabled,\n                [CSS.inlineChild]: !!this.inlineEditableEl,\n              }}\n              defaultValue={this.defaultValue}\n              disabled={this.disabled ? true : null}\n              enterKeyHint={enterKeyHint}\n              inputMode={inputMode}\n              max={this.maxString}\n              maxLength={this.maxLength}\n              min={this.minString}\n              minLength={this.minLength}\n              multiple={this.multiple}\n              name={this.name}\n              onBlur={this.inputBlurHandler}\n              onChange={this.inputChangeHandler}\n              onFocus={this.inputFocusHandler}\n              onInput={this.inputInputHandler}\n              onKeyDown={this.inputKeyDownHandler}\n              onKeyUp={this.inputKeyUpHandler}\n              pattern={this.pattern}\n              placeholder={this.placeholder || \"\"}\n              readOnly={this.readOnly}\n              ref={this.setChildElRef}\n              required={this.required ? true : null}\n              step={this.step}\n              tabIndex={\n                this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null\n              }\n              type={this.type}\n              value={this.value}\n            />,\n            this.isTextarea ? (\n              <div class={CSS.resizeIconWrapper}>\n                <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n              </div>\n            ) : null,\n          ]\n        : null;\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}\n            ref={(el) => (this.inputWrapperEl = el)}\n          >\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {localeNumberInput}\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper} ref={(el) => (this.actionWrapperEl = el)}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.type === \"number\" && this.numberButtonType === \"vertical\" && !this.readOnly\n              ? numberButtonsVertical\n              : null}\n            {this.suffixText ? suffixText : null}\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-prefix-size: Specifies the component's prefix width.\n * @prop --calcite-input-suffix-size: Specifies the component's suffix width.\n */\n\n:host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & textarea {\n    @apply h-6;\n    min-block-size: theme(\"spacing.6\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & input[type=\"file\"] {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n  & textarea {\n    @apply text-n2h\n    h-auto\n    py-1\n    px-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.8\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & input[type=\"file\"] {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n  & textarea {\n    @apply text-n1h\n      h-auto\n      py-2\n      px-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.11\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & input[type=\"file\"] {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n  & textarea {\n    @apply text-0h\n      h-auto\n      py-3\n      px-4;\n  }\n}\n\n@include disabled() {\n  & textarea {\n    resize: none;\n  }\n}\n\ntextarea,\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply font-inherit\n    text-color-1\n    bg-foreground-1\n    relative\n    m-0\n    box-border\n    flex\n    max-h-full\n    w-full\n    max-w-full\n    flex-1\n    rounded-none\n    font-normal;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n// states\ninput,\ntextarea {\n  @apply border\n    border-color-input\n    border-solid\n    text-color-1\n    text-ellipsis;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\ninput:focus,\ntextarea:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly],\ntextarea[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus,\ntextarea[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ntextarea,\ninput {\n  @apply focus-base;\n}\ntextarea:focus,\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input,\n  & textarea {\n    @apply border-color-danger;\n  }\n  & input:focus,\n  & textarea:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block;\n}\n\n.icon,\n.resize-icon-wrapper {\n  @apply z-default; // needed for firefox to display the icon properly\n}\n\n// hide browser default clear\n\ninput[type=\"text\"]::-ms-clear,\ninput[type=\"text\"]::-ms-reveal {\n  @apply hidden\n    h-0\n    w-0;\n}\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration,\ninput[type=\"date\"]::-webkit-clear-button,\ninput[type=\"time\"]::-webkit-clear-button {\n  @apply hidden;\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-prefix-size, auto);\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-suffix-size, auto);\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & textarea,\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & textarea,\n  & input {\n    text-align: end;\n  }\n}\n\n// number buttons\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    -moz-appearance: textfield;\n    @apply m-0;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input,\n  textarea {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n// hide the default date picker\n:input::-webkit-calendar-picker-indicator {\n  @apply hidden;\n}\n\ninput[type=\"date\"]::-webkit-input-placeholder {\n  visibility: hidden !important;\n}\n\n// textarea resize icon\ntextarea::-webkit-resizer {\n  @apply absolute\n    bottom-0\n    box-border\n    py-0\n    px-1;\n  inset-inline-end: 0;\n}\n\n.resize-icon-wrapper {\n  inset-block-end: 2px;\n  inset-inline-end: 2px;\n\n  @apply bg-foreground-1\n    text-color-3\n    pointer-events-none\n    absolute\n    h-3\n    w-3;\n\n  & calcite-icon {\n    inset-block-end: theme(\"spacing.1\");\n    inset-inline-end: theme(\"spacing.1\");\n    transform: rotate(-45deg);\n  }\n}\n\n.calcite--rtl {\n  .resize-icon-wrapper {\n    & calcite-icon {\n      transform: rotate(45deg);\n    }\n  }\n}\n\n:host([type=\"color\"]) input {\n  @apply p-1;\n}\n\n// file input\n:host([type=\"file\"]) input {\n  @apply bg-foreground-1\n    border-color-input\n    cursor-pointer\n    border\n    border-dashed\n    text-center;\n}\n\n:host([type=\"file\"][scale=\"s\"]) input {\n  @apply py-px px-2;\n}\n\n:host([type=\"file\"][scale=\"m\"]) input {\n  @apply py-1 px-3;\n}\n\n:host([type=\"file\"][scale=\"l\"]) input {\n  @apply py-2 px-4;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n      flex\n      cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","export type InputComponent = NumericInputComponent | TextualInputComponent | DateTimeInputComponent;\n\nexport interface DateTimeInputComponent {\n  min: string;\n  max: string;\n}\n\nexport interface NumericInputComponent {\n  min: number;\n  max: number;\n  step: number | \"any\";\n}\n\nexport interface TextualInputComponent {\n  pattern?: string;\n  minLength: number;\n  maxLength: number;\n}\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\n\nfunction updateConstraintValidation(\n  inputComponent: InputComponent,\n  input: HTMLInputElement,\n  propName: string,\n  matchesType: boolean,\n): void {\n  const attributeName = propName.toLowerCase();\n  const value = inputComponent[propName];\n\n  if (matchesType && value != null) {\n    input.setAttribute(attributeName, `${value}`);\n  } else {\n    // we remove the attribute to ensure validation-constraints are properly reset\n    input.removeAttribute(attributeName);\n  }\n}\n\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nexport function syncHiddenFormInput(\n  type: HTMLInputElement[\"type\"] | \"textarea\",\n  inputComponent: InputComponent,\n  hiddenFormInput: HTMLInputElement,\n): void {\n  hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n\n  const isMinMaxStepType = minMaxStepTypes.includes(type);\n  const numericInputComponent = inputComponent as NumericInputComponent;\n\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n\n  const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n\n  const textualInputComponent = inputComponent as TextualInputComponent;\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n\n  const isPatternType = patternTypes.includes(type);\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n"],"names":["Progress","proxyCustomElement","HTMLElement","render","barStyles","this","type","width","value","dir","getElementDir","el","h","key","label","text","role","class","bar","indeterminate","CSS_UTILITY","rtl","reversed","style","CSS","IDS","INPUT_TYPE_ICONS","tel","password","email","date","time","search","SLOTS","Input","childElType","previousValueOrigin","mutationObserver","createObserver","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","clearInputValue","preventDefault","submitForm","nativeEvent","setValue","committing","origin","emitChangeIfUserModified","previousEmittedValue","calciteInputChange","emit","setPreviousEmittedValue","inputBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputBlur","clickHandler","composedPath","includes","inputWrapperEl","actionWrapperEl","setFocus","inputFocusHandler","calciteInternalInputFocus","inputChangeHandler","files","childEl","inputInputHandler","target","inputKeyDownHandler","inputNumberInputHandler","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","decimal","indexOf","test","split","length","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","incrementOrDecrementNumberValue","firstValueNudge","setInterval","numberButtonPointerUpAndOutHandler","numberButtonPointerDownHandler","isPrimaryPointerButton","dataset","adjustment","onHiddenFormInputInput","name","stopPropagation","setChildElRef","setChildNumberElRef","setInputValue","newInputValue","normalizeValue","setPreviousValue","previousValue","_ref","signDisplay","isValueDeleted","hasTrailingDecimalSeparator","charAt","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","calciteInputInput","inputKeyUpHandler","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","maxWatcher","max","toString","minWatcher","min","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","requestedIcon","setRequestedIcon","icon","isTextarea","clearable","effectiveLocaleChange","updateMessages","connectedCallback","connectLocalized","connectMessages","inlineEditableEl","closest","editingEnabled","connectLabel","connectForm","observe","childList","addEventListener","internalHiddenInputInputEvent","disconnectedCallback","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","componentFocusable","focus","selectText","select","onLabelClick","inputStep","step","Math","abs","nudgedValue","BigDecimal","add","finalValue","isNaN","subtract","isNegative","syncHiddenFormInput","input","slottedActionEl","getSlotted","getAttribute","slottedActionElDisabledInternally","setAttribute","removeAttribute","console","warn","loader","messages","loading","inputClearButton","clear","onClick","tabIndex","scale","getIconScale","iconEl","flipRtl","iconFlipRtl","isHorizontalNumberButton","numberButtonType","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","prefixText","suffixText","autofocus","hasAttribute","enterKeyHint","inputMode","localeNumberInput","accept","toAriaBoolean","status","getLabelText","autocomplete","defaultValue","maxLength","minLength","multiple","undefined","onBlur","onFocus","onInput","onKeyDown","onKeyUp","pattern","placeholder","ref","onChange","required","Host","InteractiveContainer","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","id","message","minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","propName","matchesType","attributeName","toLowerCase","hiddenFormInput","isMinMaxStepType","numericInputComponent","isMinMaxLengthType","textualInputComponent"],"sourceRoot":""}