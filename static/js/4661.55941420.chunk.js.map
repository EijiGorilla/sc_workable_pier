{"version":3,"file":"static/js/4661.55941420.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/list-item/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/handle/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.scss?tag=calcite-handle&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/action/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action/action.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action/action.scss?tag=calcite-action&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/list-item.scss?tag=calcite-list-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/list-item.tsx"],"sourcesContent":["export const CSS = {\n  wrapper: \"wrapper\",\n  wrapperBordered: \"wrapper--bordered\",\n  container: \"container\",\n  containerHover: \"container--hover\",\n  containerBorder: \"container--border\",\n  containerBorderSelected: \"container--border-selected\",\n  containerBorderUnselected: \"container--border-unselected\",\n  contentContainer: \"content-container\",\n  contentContainerUnavailable: \"content-container--unavailable\",\n  contentContainerSelectable: \"content-container--selectable\",\n  contentContainerHasCenterContent: \"content-container--has-center-content\",\n  nestedContainer: \"nested-container\",\n  nestedContainerOpen: \"nested-container--open\",\n  content: \"content\",\n  customContent: \"custom-content\",\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  label: \"label\",\n  description: \"description\",\n  contentEnd: \"content-end\",\n  contentBottom: \"content-bottom\",\n  actionsEnd: \"actions-end\",\n  selectionContainer: \"selection-container\",\n  selectionContainerSingle: \"selection-container--single\",\n  openContainer: \"open-container\",\n  dragContainer: \"drag-container\",\n  close: \"close\",\n};\n\nexport const SLOTS = {\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n\n// Set to zero to extend until the end of the table section.\nexport const MAX_COLUMNS = 0;\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"bullet-point-large\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"bullet-point-large\",\n  closedLTR: \"chevron-right\",\n  closedRTL: \"chevron-left\",\n  open: \"chevron-down\",\n  blank: \"blank\",\n  close: \"x\",\n} as const;\n\nexport const activeCellTestAttribute = \"data-test-active\";\n","export const CSS = {\n  handle: \"handle\",\n  handleSelected: \"handle--selected\",\n};\n\nexport const ICONS = {\n  drag: \"drag\",\n} as const;\n\nexport const SUBSTITUTIONS = {\n  itemLabel: \"{itemLabel}\",\n  position: \"{position}\",\n  total: \"{total}\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { HandleMessages } from \"./assets/handle/t9n\";\nimport { HandleChange, HandleNudge } from \"./interfaces\";\nimport { CSS, ICONS, SUBSTITUTIONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-handle\",\n  styleUrl: \"handle.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Handle implements LoadableComponent, T9nComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"messages\")\n  @Watch(\"label\")\n  @Watch(\"selected\")\n  @Watch(\"setPosition\")\n  @Watch(\"setSize\")\n  handleAriaTextChange(): void {\n    const message = this.getAriaText(\"live\");\n\n    if (message) {\n      this.calciteInternalAssistiveTextChange.emit({\n        message,\n      });\n    }\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Value for the button title attribute.\n   */\n  @Prop({ reflect: true }) dragHandle: string;\n\n  /**\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: HandleMessages;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setPosition: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setSize: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, disables unselecting the component when blurred.\n   *\n   * @internal\n   */\n  @Prop() blurUnselectDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<HandleMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectMessages(this);\n    connectLocalized(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectMessages(this);\n    disconnectLocalized(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteHandleElement;\n\n  handleButton: HTMLElement;\n\n  @State() effectiveLocale: string;\n\n  @State() defaultMessages: HandleMessages;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the handle is selected and the up or down arrow key is pressed.\n   */\n  @Event({ cancelable: false }) calciteHandleNudge: EventEmitter<HandleNudge>;\n\n  /**\n   * Fires when the assistive text has changed.\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAssistiveTextChange: EventEmitter<HandleChange>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.handleButton?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getTooltip(): string {\n    const { label, messages } = this;\n\n    if (!messages) {\n      return \"\";\n    }\n\n    if (!label) {\n      return messages.dragHandleUntitled;\n    }\n\n    return messages.dragHandle.replace(SUBSTITUTIONS.itemLabel, label);\n  }\n\n  getAriaText(type: \"label\" | \"live\"): string {\n    const { setPosition, setSize, label, messages, selected } = this;\n\n    if (!messages || !label || typeof setSize !== \"number\" || typeof setPosition !== \"number\") {\n      return null;\n    }\n\n    const text =\n      type === \"label\"\n        ? selected\n          ? messages.dragHandleChange\n          : messages.dragHandleIdle\n        : selected\n          ? messages.dragHandleActive\n          : messages.dragHandleCommit;\n\n    const replacePosition = text.replace(SUBSTITUTIONS.position, setPosition.toString());\n    const replaceLabel = replacePosition.replace(SUBSTITUTIONS.itemLabel, label);\n    return replaceLabel.replace(SUBSTITUTIONS.total, setSize.toString());\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.selected = !this.selected;\n        this.calciteHandleChange.emit();\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"up\" });\n        break;\n      case \"ArrowDown\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"down\" });\n        break;\n    }\n  };\n\n  handleBlur = (): void => {\n    if (this.blurUnselectDisabled || this.disabled) {\n      return;\n    }\n\n    if (this.selected) {\n      this.selected = false;\n      this.calciteHandleChange.emit();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <span\n          // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486\n          aria-checked={this.disabled ? null : toAriaBoolean(this.selected)}\n          aria-disabled={this.disabled ? toAriaBoolean(this.disabled) : null}\n          aria-label={this.disabled ? null : this.getAriaText(\"label\")}\n          class={{ [CSS.handle]: true, [CSS.handleSelected]: !this.disabled && this.selected }}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          ref={(el): void => {\n            this.handleButton = el;\n          }}\n          // role of radio is being applied to allow space key to select in screen readers\n          role=\"radio\"\n          tabIndex={this.disabled ? null : 0}\n          title={this.getTooltip()}\n        >\n          <calcite-icon icon={ICONS.drag} scale=\"s\" />\n        </span>\n      </InteractiveContainer>\n    );\n  }\n}\n","/**\n* CSS Custom Properties  \n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-handle-background-color: Specifies the component's background color.\n* @prop --calcite-handle-background-color-hover: Specifies the component's background color on hover.\n* @prop --calcite-handle-background-color-selected: Specifies the component's background color when selected.\n* @prop --calcite-handle-icon-color: Specifies the component's icon color.\n* @prop --calcite-handle-icon-color-hover: Specifies the component's icon color on hover.\n* @prop --calcite-handle-icon-color-selected: Specifies the component's icon color when selected.\n*/\n\n:host {\n  @apply flex;\n}\n\n.handle {\n  @apply focus-base\n    flex\n    items-center\n    justify-center\n    self-stretch\n    border-none;\n\n  color: var(--calcite-handle-icon-color, var(--calcite-color-border-input));\n  background-color: var(--calcite-handle-background-color, transparent);\n  padding-block: theme(\"spacing.3\");\n  padding-inline: theme(\"spacing.1\");\n  line-height: 0;\n\n  calcite-icon {\n    color: inherit;\n  }\n}\n\n:host(:not([disabled])) .handle {\n  @apply cursor-move;\n  &:hover {\n    color: var(--calcite-handle-icon-color-hover, var(--calcite-color-text-1));\n    background-color: var(--calcite-handle-background-color-hover, var(--calcite-color-foreground-2));\n  }\n  &:focus {\n    @apply focus-inset;\n\n    color: var(--calcite-handle-icon-color-hover, var(--calcite-color-text-1));\n  }\n  &--selected {\n    color: var(--calcite-handle-icon-color-selected, var(--calcite-color-text-1));\n    background-color: var(--calcite-handle-background-color-selected, var(--calcite-color-foreground-3));\n  }\n}\n\n@include disabled();\n\n@include base-component();\n","export const CSS = {\n  button: \"button\",\n  buttonTextVisible: \"button--text-visible\",\n  buttonCompact: \"button--compact\",\n  indicatorText: \"indicator-text\",\n  iconContainer: \"icon-container\",\n  slotContainer: \"slot-container\",\n  slotContainerHidden: \"slot-container--hidden\",\n  textContainer: \"text-container\",\n  textContainerVisible: \"text-container--visible\",\n  indicatorWithIcon: \"indicator-with-icon\",\n  indicatorWithoutIcon: \"indicator-without-icon\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n};\n","import {\n  Component,\n  Element,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { getIconScale } from \"../../utils/component\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Alignment, Appearance, Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { ActionMessages } from \"./assets/action/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a `calcite-icon`.\n * @slot tooltip - [Deprecated] Use the `calcite-tooltip` component instead.\n */\n@Component({\n  tag: \"calcite-action\",\n  styleUrl: \"action.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Action\n  implements InteractiveComponent, LocalizedComponent, T9nComponent, LoadableComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is highlighted.\n   */\n  @Prop({ reflect: true }) active = false;\n\n  /**\n   * Specifies the horizontal alignment of button elements with text content.\n   */\n  @Prop({ reflect: true }) alignment: Alignment;\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the side padding of the component is reduced.\n   *\n   * @deprecated No longer necessary.\n   */\n  @Prop({ reflect: true }) compact = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies an icon to display. */\n  @Prop() icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * When `true`, displays a visual indicator.\n   */\n  @Prop({ reflect: true }) indicator = false;\n\n  /**\n   * Specifies the label of the component. If no label is provided, the label inherits what's provided for the `text` prop.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies text that accompanies the icon.\n   */\n  @Prop() text!: string;\n\n  /**\n   * Indicates whether the text is displayed.\n   */\n  @Prop({ reflect: true }) textEnabled = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionElement;\n\n  buttonEl: HTMLButtonElement;\n\n  mutationObserver = createObserver(\"mutation\", () => forceUpdate(this));\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionMessages;\n\n  guid = `calcite-action-${guid()}`;\n\n  indicatorId = `${this.guid}-indicator`;\n\n  buttonId = `${this.guid}-button`;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (isBrowser()) {\n      await setUpMessages(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.buttonEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderTextContainer(): VNode {\n    const { text, textEnabled } = this;\n\n    const textContainerClasses = {\n      [CSS.textContainer]: true,\n      [CSS.textContainerVisible]: textEnabled,\n    };\n\n    return text ? (\n      <div class={textContainerClasses} key=\"text-container\">\n        {text}\n      </div>\n    ) : null;\n  }\n\n  renderIndicatorText(): VNode {\n    const { indicator, messages, indicatorId, buttonId } = this;\n    return (\n      <div\n        aria-labelledby={buttonId}\n        aria-live=\"polite\"\n        class={CSS.indicatorText}\n        id={indicatorId}\n        role=\"region\"\n      >\n        {indicator ? messages.indicator : null}\n      </div>\n    );\n  }\n\n  renderIconContainer(): VNode {\n    const { loading, icon, scale, el, iconFlipRtl, indicator } = this;\n    const loaderScale = scale === \"l\" ? \"l\" : \"m\";\n    const calciteLoaderNode = loading ? (\n      <calcite-loader inline label={this.messages.loading} scale={loaderScale} />\n    ) : null;\n    const calciteIconNode = icon ? (\n      <calcite-icon\n        class={{ [CSS.indicatorWithIcon]: indicator }}\n        flipRtl={iconFlipRtl}\n        icon={icon}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const iconNode = calciteLoaderNode || calciteIconNode;\n    const hasIconToDisplay = iconNode || el.children?.length;\n\n    const slotContainerNode = (\n      <div\n        class={{\n          [CSS.slotContainer]: true,\n          [CSS.slotContainerHidden]: loading,\n        }}\n      >\n        <slot />\n      </div>\n    );\n\n    return hasIconToDisplay ? (\n      <div aria-hidden=\"true\" class={CSS.iconContainer} key=\"icon-container\">\n        {iconNode}\n        {slotContainerNode}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const {\n      active,\n      compact,\n      disabled,\n      icon,\n      loading,\n      textEnabled,\n      label,\n      text,\n      indicator,\n      indicatorId,\n      buttonId,\n      messages,\n    } = this;\n    const labelFallback = label || text;\n    const ariaLabel = labelFallback\n      ? `${labelFallback}${indicator ? ` (${messages.indicator})` : \"\"}`\n      : \"\";\n\n    const buttonClasses = {\n      [CSS.button]: true,\n      [CSS.buttonTextVisible]: textEnabled,\n      [CSS.buttonCompact]: compact,\n    };\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <button\n            aria-busy={toAriaBoolean(loading)}\n            aria-controls={indicator ? indicatorId : null}\n            aria-label={ariaLabel}\n            aria-pressed={toAriaBoolean(active)}\n            class={buttonClasses}\n            disabled={disabled}\n            id={buttonId}\n            ref={(buttonEl): HTMLButtonElement => (this.buttonEl = buttonEl)}\n          >\n            {this.renderIconContainer()}\n            {this.renderTextContainer()}\n            {!icon && indicator && <div class={CSS.indicatorWithoutIcon} key=\"indicator-no-icon\" />}\n          </button>\n          <slot name={SLOTS.tooltip} onSlotchange={this.handleTooltipSlotChange} />\n          {this.renderIndicatorText()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el): el is HTMLCalciteTooltipElement => el?.matches(\"calcite-tooltip\"));\n\n    const tooltip = tooltips[0];\n\n    if (tooltip) {\n      tooltip.referenceElement = this.buttonEl;\n    }\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-indicator-color: Specifies the component's indicator color.\n * @prop --calcite-action-background-color: Specifies the component's background color.\n * @prop --calcite-action-background-color-hover: Specifies the component's background color when hovered or focused.\n * @prop --calcite-action-background-color-pressed: Specifies the component's background color when active.\n * @prop --calcite-action-corner-radius: Specifies the component's corner radius.\n * @prop --calcite-action-corner-radius-end-end: Specifies the component's corner radius end end.\n * @prop --calcite-action-corner-radius-end-start: Specifies the component's corner radius end start.\n * @prop --calcite-action-corner-radius-start-end: Specifies the component's corner radius start end.\n * @prop --calcite-action-corner-radius-start-start: Specifies the component's corner radius start start.\n * @prop --calcite-action-text-color: Specifies the component's text color.\n * @prop --calcite-action-text-color-pressed: Specifies the component's text color when hovered.\n */\n\n:host {\n  @extend %component-host;\n  @apply flex bg-transparent;\n}\n\n:host,\nbutton {\n  border-end-end-radius: var(\n    --calcite-action-corner-radius-end-end,\n    var(--calcite-action-corner-radius, var(--calcite-corner-radius))\n  );\n  border-end-start-radius: var(\n    --calcite-action-corner-radius-end-start,\n    var(--calcite-action-corner-radius, var(--calcite-corner-radius))\n  );\n  border-start-end-radius: var(\n    --calcite-action-corner-radius-start-end,\n    var(--calcite-action-corner-radius, var(--calcite-corner-radius))\n  );\n  border-start-start-radius: var(\n    --calcite-action-corner-radius-start-start,\n    var(--calcite-action-corner-radius, var(--calcite-corner-radius))\n  );\n}\n\n@mixin action-indicator() {\n  position: relative;\n  &::after {\n    content: \"\";\n    @apply absolute\n      h-2\n      w-2\n      rounded-full;\n    inset-block-end: calc(-0.275rem);\n    inset-inline-end: calc(-0.275rem);\n    background-color: var(--calcite-action-indicator-color, theme(\"colors.brand\"));\n  }\n}\n\n.button {\n  @apply focus-base\n    text-n2h\n    relative\n    m-0\n    flex\n    w-auto\n    cursor-pointer\n    items-center\n    justify-start\n    border-none\n    font-medium\n    font-sans;\n\n  background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));\n  color: var(--calcite-action-text-color, var(--calcite-color-text-3));\n  text-align: unset;\n  flex: 1 0 auto;\n\n  &:hover,\n  &:focus {\n    background-color: var(--calcite-action-background-color-hover, var(--calcite-color-foreground-2));\n    color: var(--calcite-action-text-color-pressed, var(--calcite-color-text-1));\n  }\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:active {\n    background-color: var(--calcite-action-background-color-pressed, var(--calcite-color-foreground-3));\n  }\n}\n\n.icon-container {\n  @apply pointer-events-none\n    m-0\n    flex\n    items-center\n    justify-center;\n  min-inline-size: theme(\"spacing.4\");\n  min-block-size: theme(\"spacing.6\");\n}\n\n.text-container {\n  @apply m-0\n    w-0\n    truncate\n    leading-6\n    opacity-0\n    transition-opacity\n    duration-150\n    ease-in-out;\n\n  transition-property: margin;\n  transition-property: inline-size;\n}\n\n.text-container--visible {\n  @apply w-auto flex-auto opacity-100;\n}\n\n:host([active]) {\n  .button {\n    &,\n    &:hover,\n    &:focus {\n      color: var(--calcite-action-text-color-pressed, var(--calcite-color-text-1));\n      background-color: var(--calcite-action-background-color-pressed, var(--calcite-color-foreground-3));\n    }\n\n    &:active {\n      background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));\n    }\n  }\n}\n\n:host([loading]) {\n  .button {\n    &:hover,\n    &:focus {\n      background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));\n    }\n  }\n\n  .text-container {\n    @apply opacity-disabled;\n  }\n\n  calcite-loader[inline] {\n    margin-inline-end: theme(\"spacing.0\");\n  }\n}\n\n:host([appearance=\"transparent\"]) {\n  .button {\n    @apply bg-transparent\n      transition-shadow\n      duration-150\n      ease-in-out;\n\n    &:hover,\n    &:focus {\n      background-color: var(--calcite-color-transparent-hover);\n    }\n\n    &:active {\n      background-color: var(--calcite-color-transparent-press);\n    }\n  }\n}\n\n:host([data-active]) .button {\n  @apply focus-inset;\n}\n\n:host([scale=\"s\"]) {\n  .button {\n    @apply text-n2h px-2 py-1 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.2\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  .button {\n    @apply text-n1h px-4 py-3 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.3\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  .button {\n    @apply text-0h p-5 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.4\");\n  }\n}\n\n:host([alignment=\"center\"]) .button {\n  @apply justify-center;\n}\n\n:host([alignment=\"end\"]) .button {\n  @apply justify-end;\n}\n\n:host([alignment=\"center\"]),\n:host([alignment=\"end\"]) {\n  .button .text-container--visible {\n    @apply flex-initial;\n  }\n}\n\n/* [Deprecated]  Compact */\n:host([scale=\"s\"][compact]) .button,\n:host([scale=\"m\"][compact]) .button,\n:host([scale=\"l\"][compact]) .button {\n  @apply px-0;\n}\n\n.slot-container {\n  @apply flex;\n}\n\n.slot-container--hidden {\n  @apply hidden;\n}\n\n.button--text-visible {\n  @apply w-full;\n}\n\n.indicator-with-icon {\n  @include action-indicator();\n}\n\n.indicator-without-icon {\n  @apply w-4 mx-1;\n  @include action-indicator();\n}\n\n.indicator-text {\n  @apply sr-only;\n}\n\n@include base-component();\n@include disabled {\n  .button,\n  .button:hover,\n  .button:focus {\n    @apply opacity-disabled bg-foreground-1 cursor-default;\n  }\n\n  &:host([active]) {\n    .button,\n    .button:hover,\n    .button:focus {\n      @apply opacity-disabled bg-foreground-3;\n    }\n  }\n}\n","import { isBrowser } from \"../../utils/browser\";\n\nconst listSelector = \"calcite-list\";\nconst listItemGroupSelector = \"calcite-list-item-group\";\nconst listItemSelector = \"calcite-list-item\";\n\nexport function getListItemChildLists(slotEl: HTMLSlotElement): HTMLCalciteListElement[] {\n  return Array.from(\n    slotEl.assignedElements({ flatten: true }).filter((el): el is HTMLCalciteListElement => el.matches(listSelector)),\n  );\n}\n\nexport function getListItemChildren(slotEl: HTMLSlotElement): HTMLCalciteListItemElement[] {\n  const assignedElements = slotEl.assignedElements({ flatten: true });\n\n  const listItemGroupChildren = assignedElements\n    .filter((el): el is HTMLCalciteListItemGroupElement => el?.matches(listItemGroupSelector))\n    .map((group) => Array.from(group.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  const listItemChildren = assignedElements.filter((el): el is HTMLCalciteListItemElement =>\n    el?.matches(listItemSelector),\n  );\n\n  const listItemListChildren = assignedElements\n    .filter((el): el is HTMLCalciteListElement => el?.matches(listSelector))\n    .map((list) => Array.from(list.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  return [...listItemListChildren, ...listItemGroupChildren, ...listItemChildren];\n}\n\nexport function updateListItemChildren(listItemChildren: HTMLCalciteListItemElement[]): void {\n  listItemChildren.forEach((listItem) => {\n    listItem.setPosition = listItemChildren.indexOf(listItem) + 1;\n    listItem.setSize = listItemChildren.length;\n  });\n}\n\nexport function getDepth(element: HTMLElement, includeGroup = false): number {\n  if (!isBrowser()) {\n    return 0;\n  }\n\n  const expression = includeGroup\n    ? \"ancestor::calcite-list-item | ancestor::calcite-list-item-group\"\n    : \"ancestor::calcite-list-item\";\n\n  const result = document.evaluate(expression, element, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);\n\n  return result.snapshotLength;\n}\n",":host {\n  @apply flex flex-col bg-foreground-1;\n  --calcite-list-item-icon-color: theme(\"colors.brand\");\n}\n\n:host([filter-hidden]),\n:host([closed]) {\n  @apply hidden;\n}\n\n.wrapper--bordered {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n@include disabled();\n\n.container {\n  @apply bg-foreground-1\n  box-border\n  flex\n  flex-1\n  overflow-hidden;\n  * {\n    @apply box-border;\n  }\n}\n\n.container--hover:hover {\n  @apply bg-foreground-2 cursor-pointer;\n}\n\n.container:active {\n  @apply bg-foreground-1;\n}\n\n.container--border {\n  border-inline-start-width: theme(\"borderWidth.4\");\n  border-inline-start-style: solid;\n}\n\n.container--border-selected {\n  border-inline-start-color: theme(\"colors.brand\");\n}\n\n.container--border-unselected {\n  border-inline-start-color: transparent;\n}\n\n.container:hover {\n  &.container--border-unselected {\n    @apply border-color-1;\n  }\n}\n\n.nested-container {\n  @apply hidden flex-col\n    border-solid\n    border-0\n    border-color-3;\n\n  margin-inline-start: var(--calcite-list-item-spacing-indent, theme(\"spacing.6\"));\n}\n\n.nested-container--open {\n  @apply flex;\n}\n\n.content-container {\n  @apply text-color-2\n    select-none\n    flex\n    flex-auto\n    font-normal\n    items-stretch\n    p-0;\n}\n\n.content-container--unavailable {\n  @apply opacity-disabled;\n}\n\ntr,\ntd {\n  @apply focus-base;\n}\n\ntr {\n  @apply relative;\n}\n\ntr:focus,\ntd:focus {\n  @apply focus-inset;\n}\n\n.content,\n.custom-content {\n  @apply text-n2-wrap\n    flex\n    flex-auto\n    flex-col\n    justify-center\n    px-3\n    py-2;\n}\n\n.label,\n.description,\n.content-bottom {\n  @apply text-n2 word-break font-sans font-normal;\n  &:only-child {\n    @apply m-0 py-1;\n  }\n}\n\n.label {\n  @apply text-color-1;\n}\n\n:host([selected]) .label {\n  @apply font-medium;\n}\n\n.description {\n  @apply text-color-3 mt-0.5;\n}\n\n:host([selected]) .description {\n  @apply text-color-2;\n}\n\n.content-start {\n  @apply justify-start;\n}\n\n.content-end {\n  @apply justify-end;\n}\n\n.content-start,\n.content-end {\n  @apply flex-auto;\n\n  ::slotted(calcite-icon) {\n    @apply self-center mx-3;\n  }\n}\n\n.content-bottom {\n  @apply flex flex-col;\n}\n\n.content-container--has-center-content .content-start,\n.content-container--has-center-content .content-end {\n  @apply flex-initial;\n}\n\n.selection-container {\n  @apply flex py-0;\n  color: theme(\"borderColor.color.input\");\n  padding-inline: var(--calcite-spacing-md) var(--calcite-spacing-xxs);\n}\n\n.selection-container--single {\n  color: transparent;\n}\n\n:host(:not([disabled]):not([selected])) .container:hover .selection-container--single {\n  color: theme(\"borderColor.color.1\");\n}\n\n:host([selected]:hover) .selection-container,\n:host([selected]:hover) .selection-container--single,\n:host([selected]) .selection-container {\n  color: var(--calcite-list-item-icon-color);\n}\n\n.open-container {\n  color: theme(\"textColor.color.3\");\n}\n\n:host(:not([disabled])) .container:hover .open-container {\n  color: theme(\"textColor.color.1\");\n}\n\n.actions-start,\n.actions-end,\n.content-start,\n.content-end,\n.selection-container,\n.drag-container,\n.open-container {\n  @apply flex items-center;\n\n  calcite-action,\n  calcite-handle {\n    @apply self-stretch;\n  }\n}\n\n.open-container,\n.selection-container {\n  @apply cursor-pointer;\n}\n\n.actions-start,\n.actions-end {\n  @apply p-0 relative;\n  ::slotted(calcite-action),\n  ::slotted(calcite-action-menu),\n  ::slotted(calcite-handle),\n  ::slotted(calcite-dropdown) {\n    @apply self-stretch;\n\n    color: inherit;\n  }\n}\n\ntr:focus {\n  .actions-start,\n  .actions-end {\n    inset-block: theme(\"spacing[0.5]\");\n    .close,\n    ::slotted(calcite-action),\n    ::slotted(calcite-action-menu),\n    ::slotted(calcite-handle),\n    ::slotted(calcite-dropdown) {\n      block-size: calc(100% - theme(\"spacing[1]\"));\n    }\n  }\n\n  &::after,\n  &::before {\n    @apply absolute;\n    content: \"\";\n    inline-size: theme(\"spacing[0.5]\");\n    z-index: theme(\"zIndex.header\");\n    background-color: theme(\"colors.brand\");\n    inset-block: 0;\n  }\n  &::before {\n    inset-inline-start: 0;\n  }\n  &::after {\n    inset-inline-end: 0;\n  }\n}\n\n.container--border:focus::before {\n  display: none;\n}\n\n::slotted(calcite-list:empty) {\n  @apply border-t-0;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getFirstTabbable,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SelectionMode } from \"../interfaces\";\nimport { SelectionAppearance } from \"../list/resources\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SortableComponentItem } from \"../../utils/sortableComponent\";\nimport { ListItemMessages } from \"./assets/list-item/t9n\";\nimport {\n  getDepth,\n  getListItemChildren,\n  getListItemChildLists,\n  updateListItemChildren,\n} from \"./utils\";\nimport { CSS, activeCellTestAttribute, ICONS, SLOTS } from \"./resources\";\n\nconst focusMap = new Map<HTMLCalciteListElement, number>();\nconst listSelector = \"calcite-list\";\n\n/**\n * @slot - A slot for adding `calcite-list`, `calcite-list-item` and `calcite-list-item-group` elements.\n * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the component.\n * @slot content-start - A slot for adding non-actionable elements before the label and description of the component.\n * @slot content - A slot for adding non-actionable, centered content in place of the `label` and `description` of the component.\n * @slot content-end - A slot for adding non-actionable elements after the label and description of the component.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component.\n * @slot content-bottom - A slot for adding content below the component's `label` and `description`.\n */\n@Component({\n  tag: \"calcite-list-item\",\n  styleUrl: \"list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ListItem\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent,\n    SortableComponentItem\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets the item as focusable. Only one item should be focusable within a list.\n   *\n   * @internal\n   */\n  @Prop() active = false;\n\n  @Watch(\"active\")\n  activeHandler(active: boolean): void {\n    if (!active) {\n      this.focusCell(null, false);\n    }\n  }\n\n  /**\n   * Sets the item to display a border.\n   *\n   * @internal\n   */\n  @Prop() bordered = false;\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  handleClosedChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * A description for the component. Displays below the label text.\n   */\n  @Prop() description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * When `true`, the item is not draggable.\n   */\n  @Prop({ reflect: true }) dragDisabled = false;\n\n  /**\n   * When `true`, the component displays a draggable button.\n   *\n   * @internal\n   */\n  @Prop() dragHandle = false;\n\n  /**\n   * When `true`, the component's drag handle is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) dragSelected = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The label text of the component. Displays above the description text.\n   */\n  @Prop() label: string;\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent `calcite-list`.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * When `true`, the item is open to show child components.\n   */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  handleOpenChange(): void {\n    this.emitCalciteInternalListItemToggle();\n  }\n\n  /**\n   * Used to specify the aria-setsize attribute to define the number of items in the current set of list for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setSize: number = null;\n\n  /**\n   * Used to specify the aria-posinset attribute to define the number or position in the current set of list items for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setPosition: number = null;\n\n  /**\n   * When `true` and the parent `calcite-list`'s `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(): void {\n    this.calciteInternalListItemSelect.emit();\n  }\n\n  /**\n   * When `true`, the component's content appears inactive.\n   */\n  @Prop({ reflect: true }) unavailable = false;\n\n  /**\n   * The component's value.\n   */\n  @Prop() value: any;\n\n  /**\n   * Specifies the selection mode - `\"multiple\"` (allow any number of selected items), `\"single\"` (allow one selected item), `\"single-persist\"` (allow one selected item and prevent de-selection), or `\"none\"` (no selected items).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = null;\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionAppearance: SelectionAppearance = null;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListItemMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemSelect: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the drag handle is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemDragHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the open button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemToggle: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemSelect: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemSelectMultiple: EventEmitter<{\n    selectMultiple: boolean;\n  }>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemActive: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalFocusPreviousItem: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemChange: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemToggle: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  @Listen(\"calciteInternalListDefaultSlotChange\")\n  handleCalciteInternalListDefaultSlotChanges(event: CustomEvent<void>): void {\n    event.stopPropagation();\n    this.handleOpenableChange(this.defaultSlotEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListItemMessages;\n\n  @State() level: number = null;\n\n  @State() parentListEl: HTMLCalciteListElement;\n\n  @State() openable = false;\n\n  @State() hasActionsStart = false;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasCustomContent = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentBottom = false;\n\n  containerEl: HTMLTableRowElement;\n\n  contentEl: HTMLTableCellElement;\n\n  actionsStartEl: HTMLTableCellElement;\n\n  actionsEndEl: HTMLTableCellElement;\n\n  handleGridEl: HTMLTableCellElement;\n\n  defaultSlotEl: HTMLSlotElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    const { el } = this;\n    this.parentListEl = el.closest(listSelector);\n    this.level = getDepth(el) + 1;\n    this.setSelectionDefaults();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    const { containerEl, parentListEl } = this;\n    const focusIndex = focusMap.get(parentListEl);\n\n    if (typeof focusIndex === \"number\") {\n      const cells = this.getGridCells();\n      if (cells[focusIndex]) {\n        this.focusCell(cells[focusIndex]);\n      } else {\n        containerEl?.focus();\n      }\n      return;\n    }\n\n    containerEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelected(): VNode {\n    const { selected, selectionMode, selectionAppearance } = this;\n\n    if (selectionMode === \"none\" || selectionAppearance === \"border\") {\n      return null;\n    }\n\n    return (\n      <td\n        class={{\n          [CSS.selectionContainer]: true,\n          [CSS.selectionContainerSingle]:\n            selectionMode === \"single\" || selectionMode === \"single-persist\",\n        }}\n        key=\"selection-container\"\n        onClick={this.handleItemClick}\n      >\n        <calcite-icon\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      </td>\n    );\n  }\n\n  renderDragHandle(): VNode {\n    const { label, dragHandle, dragSelected, dragDisabled, setPosition, setSize } = this;\n\n    return dragHandle ? (\n      <td\n        aria-label={label}\n        class={CSS.dragContainer}\n        key=\"drag-handle-container\"\n        onFocusin={this.focusCellHandle}\n        ref={(el) => (this.handleGridEl = el)}\n        role=\"gridcell\"\n      >\n        <calcite-handle\n          disabled={dragDisabled}\n          label={label}\n          onCalciteHandleChange={this.dragHandleSelectedChangeHandler}\n          selected={dragSelected}\n          setPosition={setPosition}\n          setSize={setSize}\n        />\n      </td>\n    ) : null;\n  }\n\n  renderOpen(): VNode {\n    const { el, open, openable, messages } = this;\n    const dir = getElementDir(el);\n    const icon = open ? ICONS.open : dir === \"rtl\" ? ICONS.closedRTL : ICONS.closedLTR;\n    const tooltip = open ? messages.collapse : messages.expand;\n\n    return openable ? (\n      <td\n        class={CSS.openContainer}\n        key=\"open-container\"\n        onClick={this.handleToggleClick}\n        title={tooltip}\n      >\n        <calcite-icon icon={icon} key={icon} scale=\"s\" />\n      </td>\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { label, hasActionsStart } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsStart}\n        hidden={!hasActionsStart}\n        key=\"actions-start-container\"\n        onFocusin={this.focusCellActionsStart}\n        ref={(el) => (this.actionsStartEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsStart} onSlotchange={this.handleActionsStartSlotChange} />\n      </td>\n    );\n  }\n\n  renderActionsEnd(): VNode {\n    const { label, hasActionsEnd, closable, messages } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsEnd}\n        hidden={!(hasActionsEnd || closable)}\n        key=\"actions-end-container\"\n        onFocusin={this.focusCellActionsEnd}\n        ref={(el) => (this.actionsEndEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        {closable ? (\n          <calcite-action\n            appearance=\"transparent\"\n            class={CSS.close}\n            icon={ICONS.close}\n            key=\"close-action\"\n            label={messages.close}\n            onClick={this.handleCloseClick}\n            text={messages.close}\n          />\n        ) : null}\n      </td>\n    );\n  }\n\n  renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderCustomContent(): VNode {\n    const { hasCustomContent } = this;\n    return (\n      <div class={CSS.customContent} hidden={!hasCustomContent}>\n        <slot name={SLOTS.content} onSlotchange={this.handleContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentEnd(): VNode {\n    const { hasContentEnd } = this;\n    return (\n      <div class={CSS.contentEnd} hidden={!hasContentEnd}>\n        <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    const { hasContentBottom } = this;\n    return (\n      <div class={CSS.contentBottom} hidden={!hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.handleContentBottomSlotChange} />\n      </div>\n    );\n  }\n\n  renderDefaultContainer(): VNode {\n    return (\n      <div\n        class={{\n          [CSS.nestedContainer]: true,\n          [CSS.nestedContainerOpen]: this.openable && this.open,\n        }}\n      >\n        <slot\n          onSlotchange={this.handleDefaultSlotChange}\n          ref={(el: HTMLSlotElement) => (this.defaultSlotEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderContentProperties(): VNode {\n    const { label, description, hasCustomContent } = this;\n\n    return !hasCustomContent && (!!label || !!description) ? (\n      <div class={CSS.content} key=\"content\">\n        {label ? (\n          <div class={CSS.label} key=\"label\">\n            {label}\n          </div>\n        ) : null}\n        {description ? (\n          <div class={CSS.description} key=\"description\">\n            {description}\n          </div>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  renderContentContainer(): VNode {\n    const { description, label, selectionMode, hasCustomContent, unavailable } = this;\n    const hasCenterContent = hasCustomContent || !!label || !!description;\n    const content = [\n      this.renderContentStart(),\n      this.renderCustomContent(),\n      this.renderContentProperties(),\n      this.renderContentEnd(),\n    ];\n\n    return (\n      <td\n        aria-label={label}\n        class={{\n          [CSS.contentContainer]: true,\n          [CSS.contentContainerUnavailable]: unavailable,\n          [CSS.contentContainerSelectable]: selectionMode !== \"none\",\n          [CSS.contentContainerHasCenterContent]: hasCenterContent,\n        }}\n        key=\"content-container\"\n        onClick={this.handleItemClick}\n        onFocusin={this.focusCellContent}\n        ref={(el) => (this.contentEl = el)}\n        role=\"gridcell\"\n      >\n        {content}\n      </td>\n    );\n  }\n\n  render(): VNode {\n    const {\n      openable,\n      open,\n      level,\n      setPosition,\n      setSize,\n      active,\n      label,\n      selected,\n      selectionAppearance,\n      selectionMode,\n      closed,\n      filterHidden,\n      bordered,\n      disabled,\n    } = this;\n\n    const showBorder = selectionMode !== \"none\" && selectionAppearance === \"border\";\n    const borderSelected = showBorder && selected;\n    const borderUnselected = showBorder && !selected;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={{ [CSS.wrapper]: true, [CSS.wrapperBordered]: bordered }}>\n            <tr\n              aria-expanded={openable ? toAriaBoolean(open) : null}\n              aria-label={label}\n              aria-level={level}\n              aria-posinset={setPosition}\n              aria-selected={toAriaBoolean(selected)}\n              aria-setsize={setSize}\n              class={{\n                [CSS.container]: true,\n                [CSS.containerHover]: true,\n                [CSS.containerBorder]: showBorder,\n                [CSS.containerBorderSelected]: borderSelected,\n                [CSS.containerBorderUnselected]: borderUnselected,\n              }}\n              hidden={closed || filterHidden}\n              onFocus={this.focusCellNull}\n              onFocusin={this.emitInternalListItemActive}\n              onKeyDown={this.handleItemKeyDown}\n              ref={(el) => (this.containerEl = el)}\n              role=\"row\"\n              tabIndex={active ? 0 : -1}\n            >\n              {this.renderDragHandle()}\n              {this.renderSelected()}\n              {this.renderOpen()}\n              {this.renderActionsStart()}\n              {this.renderContentContainer()}\n              {this.renderActionsEnd()}\n            </tr>\n            {this.renderContentBottom()}\n          </div>\n          {this.renderDefaultContainer()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private dragHandleSelectedChangeHandler = (event: CustomEvent<void>): void => {\n    this.dragSelected = (event.target as HTMLCalciteHandleElement).selected;\n    this.calciteListItemDragHandleChange.emit();\n    event.stopPropagation();\n  };\n\n  private emitInternalListItemActive = (): void => {\n    this.calciteInternalListItemActive.emit();\n  };\n\n  private focusCellHandle = (): void => {\n    this.handleCellFocusIn(this.handleGridEl);\n  };\n\n  private focusCellActionsStart = (): void => {\n    this.handleCellFocusIn(this.actionsStartEl);\n  };\n\n  private focusCellContent = (): void => {\n    this.handleCellFocusIn(this.contentEl);\n  };\n\n  private focusCellActionsEnd = (): void => {\n    this.handleCellFocusIn(this.actionsEndEl);\n  };\n\n  private emitCalciteInternalListItemToggle(): void {\n    this.calciteInternalListItemToggle.emit();\n  }\n\n  private emitCalciteInternalListItemChange(): void {\n    this.calciteInternalListItemChange.emit();\n  }\n\n  private handleCloseClick = (): void => {\n    this.closed = true;\n    this.calciteListItemClose.emit();\n  };\n\n  private handleContentSlotChange = (event: Event): void => {\n    this.hasCustomContent = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsStartSlotChange = (event: Event): void => {\n    this.hasActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentBottomSlotChange = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private setSelectionDefaults(): void {\n    const { parentListEl, selectionMode, selectionAppearance } = this;\n\n    if (!parentListEl) {\n      return;\n    }\n\n    if (!selectionMode) {\n      this.selectionMode = parentListEl.selectionMode;\n    }\n\n    if (!selectionAppearance) {\n      this.selectionAppearance = parentListEl.selectionAppearance;\n    }\n  }\n\n  private handleOpenableChange(slotEl: HTMLSlotElement): void {\n    if (!slotEl) {\n      return;\n    }\n\n    const listItemChildren = getListItemChildren(slotEl);\n    const listItemChildLists = getListItemChildLists(slotEl);\n    updateListItemChildren(listItemChildren);\n\n    this.openable = !!listItemChildren.length || !!listItemChildLists.length;\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.handleOpenableChange(event.target as HTMLSlotElement);\n  };\n\n  private handleToggleClick = (): void => {\n    this.toggle();\n  };\n\n  private toggle = (value = !this.open): void => {\n    this.open = value;\n    this.calciteListItemToggle.emit();\n  };\n\n  private handleItemClick = (event: PointerEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.toggleSelected(event.shiftKey);\n  };\n\n  private toggleSelected = (shiftKey: boolean): void => {\n    const { selectionMode, selected } = this;\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (selectionMode === \"multiple\" || selectionMode === \"single\") {\n      this.selected = !selected;\n    } else if (selectionMode === \"single-persist\") {\n      this.selected = true;\n    }\n\n    this.calciteInternalListItemSelectMultiple.emit({\n      selectMultiple: shiftKey && selectionMode === \"multiple\",\n    });\n    this.calciteListItemSelect.emit();\n  };\n\n  private getGridCells(): HTMLTableCellElement[] {\n    return [this.handleGridEl, this.actionsStartEl, this.contentEl, this.actionsEndEl].filter(\n      (el) => el && !el.hidden,\n    );\n  }\n\n  private handleItemKeyDown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const { key } = event;\n    const composedPath = event.composedPath();\n    const { containerEl, actionsStartEl, actionsEndEl, open, openable } = this;\n\n    const cells = this.getGridCells();\n    const currentIndex = cells.findIndex((cell) => composedPath.includes(cell));\n\n    if (\n      key === \"Enter\" &&\n      !composedPath.includes(actionsStartEl) &&\n      !composedPath.includes(actionsEndEl)\n    ) {\n      event.preventDefault();\n      this.toggleSelected(event.shiftKey);\n    } else if (key === \"ArrowRight\") {\n      event.preventDefault();\n      const nextIndex = currentIndex + 1;\n      if (currentIndex === -1) {\n        if (!open && openable) {\n          this.toggle(true);\n          this.focusCell(null);\n        } else if (cells[0]) {\n          this.focusCell(cells[0]);\n        }\n      } else if (cells[currentIndex] && cells[nextIndex]) {\n        this.focusCell(cells[nextIndex]);\n      }\n    } else if (key === \"ArrowLeft\") {\n      event.preventDefault();\n      const prevIndex = currentIndex - 1;\n      if (currentIndex === -1) {\n        this.focusCell(null);\n        if (open && openable) {\n          this.toggle(false);\n        } else {\n          this.calciteInternalFocusPreviousItem.emit();\n        }\n      } else if (currentIndex === 0) {\n        this.focusCell(null);\n        containerEl.focus();\n      } else if (cells[currentIndex] && cells[prevIndex]) {\n        this.focusCell(cells[prevIndex]);\n      }\n    }\n  };\n\n  private focusCellNull = (): void => {\n    this.focusCell(null);\n  };\n\n  private handleCellFocusIn = (focusEl: HTMLTableCellElement): void => {\n    this.setFocusCell(focusEl, getFirstTabbable(focusEl), true);\n  };\n\n  // Only one cell within a list-item should be focusable at a time. Ensures the active cell is focusable.\n  private setFocusCell = (\n    focusEl: HTMLTableCellElement | null,\n    focusedEl: HTMLElement,\n    saveFocusIndex: boolean,\n  ): void => {\n    const { parentListEl } = this;\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, null);\n    }\n\n    const gridCells = this.getGridCells();\n\n    gridCells.forEach((tableCell) => {\n      tableCell.tabIndex = -1;\n      tableCell.removeAttribute(activeCellTestAttribute);\n    });\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusEl.tabIndex = focusEl === focusedEl ? 0 : -1;\n    focusEl.setAttribute(activeCellTestAttribute, \"\");\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, gridCells.indexOf(focusEl));\n    }\n  };\n\n  private focusCell = (focusEl: HTMLTableCellElement | null, saveFocusIndex = true): void => {\n    const focusedEl = getFirstTabbable(focusEl);\n    this.setFocusCell(focusEl, focusedEl, saveFocusIndex);\n    focusedEl?.focus();\n  };\n}\n"],"names":["CSS","wrapper","wrapperBordered","container","containerHover","containerBorder","containerBorderSelected","containerBorderUnselected","contentContainer","contentContainerUnavailable","contentContainerSelectable","contentContainerHasCenterContent","nestedContainer","nestedContainerOpen","content","customContent","actionsStart","contentStart","label","description","contentEnd","contentBottom","actionsEnd","selectionContainer","selectionContainerSingle","openContainer","dragContainer","close","SLOTS","MAX_COLUMNS","ICONS","selectedMultiple","selectedSingle","unselectedMultiple","unselectedSingle","closedLTR","closedRTL","open","blank","activeCellTestAttribute","SUBSTITUTIONS","Handle","proxyCustomElement","HTMLElement","handleKeyDown","event","this","disabled","key","selected","calciteHandleChange","emit","preventDefault","calciteHandleNudge","direction","handleBlur","blurUnselectDisabled","handleAriaTextChange","message","getAriaText","calciteInternalAssistiveTextChange","onMessagesChange","connectedCallback","connectMessages","connectLocalized","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectMessages","disconnectLocalized","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","handleButton","focus","getTooltip","messages","dragHandle","replace","dragHandleUntitled","type","setPosition","setSize","dragHandleChange","dragHandleIdle","dragHandleActive","dragHandleCommit","toString","render","h","InteractiveContainer","toAriaBoolean","class","onBlur","onKeyDown","ref","el","role","tabIndex","title","icon","scale","Action","mutationObserver","createObserver","forceUpdate","guid","indicatorId","buttonId","handleTooltipSlotChange","tooltip","target","assignedElements","flatten","filter","matches","referenceElement","buttonEl","observe","childList","subtree","isBrowser","disconnect","renderTextContainer","text","textEnabled","textContainerClasses","renderIndicatorText","indicator","id","renderIconContainer","loading","iconFlipRtl","loaderScale","calciteLoaderNode","inline","calciteIconNode","flipRtl","getIconScale","iconNode","hasIconToDisplay","children","length","slotContainerNode","active","compact","labelFallback","ariaLabel","buttonClasses","Host","name","onSlotchange","listSelector","listItemGroupSelector","listItemSelector","getListItemChildLists","slotEl","Array","from","getListItemChildren","listItemGroupChildren","map","group","querySelectorAll","reduce","previousValue","currentValue","listItemChildren","list","updateListItemChildren","forEach","listItem","indexOf","getDepth","element","includeGroup","arguments","undefined","expression","document","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","focusMap","Map","ListItem","dragHandleSelectedChangeHandler","dragSelected","calciteListItemDragHandleChange","stopPropagation","emitInternalListItemActive","calciteInternalListItemActive","focusCellHandle","handleCellFocusIn","handleGridEl","focusCellActionsStart","actionsStartEl","focusCellContent","contentEl","focusCellActionsEnd","actionsEndEl","handleCloseClick","closed","calciteListItemClose","handleContentSlotChange","hasCustomContent","slotChangeHasAssignedElement","handleActionsStartSlotChange","hasActionsStart","handleActionsEndSlotChange","hasActionsEnd","handleContentStartSlotChange","hasContentStart","handleContentEndSlotChange","hasContentEnd","handleContentBottomSlotChange","hasContentBottom","handleDefaultSlotChange","handleOpenableChange","handleToggleClick","toggle","value","_this","calciteListItemToggle","handleItemClick","defaultPrevented","toggleSelected","shiftKey","selectionMode","calciteInternalListItemSelectMultiple","selectMultiple","calciteListItemSelect","handleItemKeyDown","composedPath","containerEl","openable","cells","getGridCells","currentIndex","findIndex","cell","includes","nextIndex","focusCell","prevIndex","calciteInternalFocusPreviousItem","focusCellNull","focusEl","setFocusCell","getFirstTabbable","focusedEl","saveFocusIndex","parentListEl","set","gridCells","tableCell","removeAttribute","setAttribute","activeHandler","handleClosedChange","emitCalciteInternalListItemChange","handleDisabledChange","handleOpenChange","emitCalciteInternalListItemToggle","handleSelectedChange","calciteInternalListItemSelect","handleCalciteInternalListDefaultSlotChanges","defaultSlotEl","closest","level","setSelectionDefaults","focusIndex","get","renderSelected","selectionAppearance","onClick","renderDragHandle","dragDisabled","onFocusin","onCalciteHandleChange","renderOpen","dir","getElementDir","collapse","expand","renderActionsStart","hidden","renderActionsEnd","closable","appearance","renderContentStart","renderCustomContent","renderContentEnd","renderContentBottom","renderDefaultContainer","renderContentProperties","renderContentContainer","unavailable","hasCenterContent","filterHidden","bordered","showBorder","borderSelected","borderUnselected","onFocus","calciteInternalListItemToggle","calciteInternalListItemChange","listItemChildLists"],"sourceRoot":""}