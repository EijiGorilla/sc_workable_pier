{"version":3,"file":"static/js/8347.d7c1dc8e.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/node_modules/@floating-ui/utils/dist/floating-ui.utils.esm.js","../node_modules/@esri/calcite-components/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","../node_modules/@esri/calcite-components/node_modules/@floating-ui/utils/dom/floating-ui.utils.dom.esm.js","../node_modules/@esri/calcite-components/dist/components/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","../node_modules/@esri/calcite-components/dist/components/node_modules/composed-offset-position/dist/composed-offset-position.esm.js","../node_modules/@esri/calcite-components/dist/components/src/utils/floating-ui.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/openCloseComponent.ts","../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { isContainingBlock } from '@floating-ui/utils/dom';\n\nfunction offsetParent(element) {\n    return offsetParentPolyfill(element);\n}\nfunction offsetTop(element) {\n    return offsetTopLeftPolyfill(element, 'offsetTop');\n}\nfunction offsetLeft(element) {\n    return offsetTopLeftPolyfill(element, 'offsetLeft');\n}\nfunction flatTreeParent(element) {\n    if (element.assignedSlot) {\n        return element.assignedSlot;\n    }\n    if (element.parentNode instanceof ShadowRoot) {\n        return element.parentNode.host;\n    }\n    return element.parentNode;\n}\nfunction ancestorTreeScopes(element) {\n    const scopes = new Set();\n    let currentScope = element.getRootNode();\n    while (currentScope) {\n        scopes.add(currentScope);\n        currentScope = currentScope.parentNode\n            ? currentScope.parentNode.getRootNode()\n            : null;\n    }\n    return scopes;\n}\nfunction offsetParentPolyfill(element) {\n    // Do an initial walk to check for display:none ancestors.\n    for (let ancestor = element; ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        if (getComputedStyle(ancestor).display === 'none') {\n            return null;\n        }\n    }\n    for (let ancestor = flatTreeParent(element); ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        const style = getComputedStyle(ancestor);\n        // Display:contents nodes aren't in the layout tree, so they should be skipped.\n        if (style.display === 'contents') {\n            continue;\n        }\n        if (style.position !== 'static' || isContainingBlock(style)) {\n            return ancestor;\n        }\n        if (ancestor.tagName === 'BODY') {\n            return ancestor;\n        }\n    }\n    return null;\n}\nfunction offsetTopLeftPolyfill(element, offsetTopOrLeft) {\n    let value = element[offsetTopOrLeft];\n    let nextOffsetParent = offsetParentPolyfill(element);\n    const scopes = ancestorTreeScopes(element);\n    while (nextOffsetParent && !scopes.has(nextOffsetParent.getRootNode())) {\n        value -= nextOffsetParent[offsetTopOrLeft];\n        nextOffsetParent = offsetParentPolyfill(nextOffsetParent);\n    }\n    return value;\n}\n\nexport { offsetLeft, offsetParent, offsetTop };\n","import {\n  arrow,\n  autoPlacement,\n  autoUpdate,\n  computePosition,\n  flip,\n  hide,\n  Middleware,\n  offset,\n  Placement,\n  platform,\n  shift,\n  Side,\n  Strategy,\n  VirtualElement,\n} from \"@floating-ui/dom\";\nimport { debounce, DebouncedFunc } from \"lodash-es\";\nimport { offsetParent } from \"composed-offset-position\";\nimport { Layout } from \"../components/interfaces\";\nimport { DEBOUNCE } from \"./resources\";\nimport { getElementDir } from \"./dom\";\nimport { isBrowser } from \"./browser\";\n\n(function setUpFloatingUiForShadowDomPositioning(): void {\n  if (isBrowser()) {\n    const originalGetOffsetParent = platform.getOffsetParent;\n    platform.getOffsetParent = (element: Element) => originalGetOffsetParent(element, offsetParent);\n  }\n})();\n\nfunction roundByDPR(value: number): number {\n  const dpr = window.devicePixelRatio || 1;\n  return Math.round(value * dpr) / dpr;\n}\n\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param component\n * @param root0.referenceEl.referenceEl\n * @param root0.referenceEl.floatingEl\n * @param root0.referenceEl.overlayPositioning\n * @param root0.referenceEl.placement\n * @param root0.referenceEl.flipDisabled\n * @param root0.referenceEl.flipPlacements\n * @param root0.referenceEl.offsetDistance\n * @param root0.referenceEl.offsetSkidding\n * @param root0.referenceEl.arrowEl\n * @param root0.referenceEl.type\n * @param component.referenceEl\n * @param component.floatingEl\n * @param component.overlayPositioning\n * @param component.placement\n * @param component.flipDisabled\n * @param component.flipPlacements\n * @param component.offsetDistance\n * @param component.offsetSkidding\n * @param component.arrowEl\n * @param component.type\n */\nexport const positionFloatingUI =\n  /* we export arrow function to allow us to spy on it during testing */\n  async (\n    component: FloatingUIComponent,\n    {\n      referenceEl,\n      floatingEl,\n      overlayPositioning = \"absolute\",\n      placement,\n      flipDisabled,\n      flipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n      type,\n    }: {\n      referenceEl: ReferenceElement;\n      floatingEl: HTMLElement;\n      overlayPositioning: Strategy;\n      placement: LogicalPlacement;\n      flipDisabled?: boolean;\n      flipPlacements?: FlipPlacement[];\n      offsetDistance?: number;\n      offsetSkidding?: number;\n      arrowEl?: SVGSVGElement;\n      type: UIType;\n    },\n  ): Promise<void> => {\n    if (!referenceEl || !floatingEl) {\n      return null;\n    }\n\n    const isRTL = getElementDir(floatingEl) === \"rtl\";\n\n    const {\n      x,\n      y,\n      placement: effectivePlacement,\n      strategy: position,\n      middlewareData,\n    } = await computePosition(referenceEl, floatingEl, {\n      strategy: overlayPositioning,\n      placement:\n        placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\"\n          ? undefined\n          : getEffectivePlacement(placement, isRTL),\n      middleware: getMiddleware({\n        placement,\n        flipDisabled,\n        flipPlacements: flipPlacements?.map((placement) => getEffectivePlacement(placement, isRTL)),\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type,\n      }),\n    });\n\n    if (arrowEl && middlewareData.arrow) {\n      const { x, y } = middlewareData.arrow;\n      const side = effectivePlacement.split(\"-\")[0] as Side;\n      const alignment = x != null ? \"left\" : \"top\";\n      const transform = ARROW_CSS_TRANSFORM[side];\n      const reset = { left: \"\", top: \"\", bottom: \"\", right: \"\" };\n\n      if (\"floatingLayout\" in component) {\n        component.floatingLayout = side === \"left\" || side === \"right\" ? \"horizontal\" : \"vertical\";\n      }\n\n      Object.assign(arrowEl.style, {\n        ...reset,\n        [alignment]: `${alignment == \"left\" ? x : y}px`,\n        [side]: \"100%\",\n        transform,\n      });\n    }\n\n    const referenceHidden = middlewareData.hide?.referenceHidden;\n    const visibility = referenceHidden ? \"hidden\" : null;\n    const pointerEvents = visibility ? \"none\" : null;\n\n    floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n\n    const { open } = component;\n\n    Object.assign(floatingEl.style, {\n      visibility,\n      pointerEvents,\n      position,\n      transform: open ? `translate(${roundByDPR(x)}px,${roundByDPR(y)}px)` : \"\",\n      top: 0,\n      left: 0,\n    });\n  };\n\n/**\n * Exported for testing purposes only\n */\nexport const placementDataAttribute = \"data-placement\";\n\nexport type ReferenceElement = VirtualElement | Element;\n\ntype UIType = \"menu\" | \"tooltip\" | \"popover\";\nexport type OverlayPositioning = Strategy;\n\n/**\n * Variation Placements change based on element direction.\n *\n * These variation placements will automatically flip \"left\"/\"right\" depending on LTR/RTL direction.\n *\n * Floating-ui has no plans to offer this functionality out of the box at this time.\n *\n * see: https://github.com/floating-ui/floating-ui/issues/1563 and https://github.com/floating-ui/floating-ui/discussions/1549\n */\n\nexport type EffectivePlacement = Placement;\n\nexport const placements = [\n  // auto placements\n  \"auto\",\n  \"auto-start\",\n  \"auto-end\",\n  // placements\n  \"top\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right\",\n  \"right-start\",\n  \"right-end\",\n  \"left\",\n  \"left-start\",\n  \"left-end\",\n  // variation placements\n  \"leading-start\",\n  \"leading\",\n  \"leading-end\",\n  \"trailing-end\",\n  \"trailing\",\n  \"trailing-start\",\n] as const;\n\nexport type LogicalPlacement = (typeof placements)[number];\n\nexport const effectivePlacements: EffectivePlacement[] = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n];\n\nexport const menuPlacements: MenuPlacement[] = [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"];\n\nexport const menuEffectivePlacements: EffectivePlacement[] = [\n  \"top-start\",\n  \"top\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom\",\n  \"bottom-end\",\n];\n\nexport type FlipPlacement = Exclude<LogicalPlacement, \"auto\" | \"auto-start\" | \"auto-end\">;\n\nexport const flipPlacements: FlipPlacement[] = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n  \"leading\",\n  \"trailing\",\n  \"leading-start\",\n  \"leading-end\",\n  \"trailing-start\",\n  \"trailing-end\",\n];\n\nexport type MenuPlacement = Extract<\n  LogicalPlacement,\n  \"top-start\" | \"top\" | \"top-end\" | \"bottom-start\" | \"bottom\" | \"bottom-end\"\n>;\n\nexport const defaultMenuPlacement: MenuPlacement = \"bottom-start\";\nexport const defaultEndMenuPlacement: MenuPlacement = \"bottom-end\";\n\nexport interface FloatingUIComponent {\n  /**\n   * Whether the component is opened.\n   */\n  open: boolean;\n\n  /**\n   * Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value.\n   */\n  overlayPositioning: OverlayPositioning;\n\n  /**\n   * Determines where the component will be positioned relative to the referenceElement.\n   *\n   * Possible values: \"auto\", \"auto-start\", \"auto-end\", \"top\", \"right\", \"bottom\", \"left\", \"top-start\", \"top-end\", \"right-start\", \"right-end\", \"bottom-start\", \"bottom-end\", \"left-start\", \"left-end\", \"leading-start\", \"leading\", \"leading-end\", \"trailing-end\", \"trailing\",  or \"trailing-start\".\n   *\n   */\n  placement: LogicalPlacement;\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed – (internal) when true, it will reposition the component after a delay. the default is false. This is useful for components that have multiple watched properties that schedule repositioning.\n   */\n  reposition: (delayed?: boolean) => Promise<void>;\n\n  /**\n   * Used to store the effective floating layout for components that use arrows.\n   *\n   * This is an internal property and should:\n   *\n   * - only be used for components that support arrows\n   * - use the `@State` decorator\n   * - be initialized to \"vertical\"\n   *\n   * Possible values: \"vertical\" or \"horizontal\".\n   *\n   * See [FloatingArrow](https://github.com/Esri/calcite-design-system/blob/dev/src/components/functional/FloatingArrow.tsx)\n   */\n  floatingLayout?: FloatingLayout;\n}\n\nexport type FloatingLayout = Extract<Layout, \"vertical\" | \"horizontal\">;\n\nexport const FloatingCSS = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\",\n  arrow: \"calcite-floating-ui-arrow\",\n  arrowStroke: \"calcite-floating-ui-arrow__stroke\",\n};\n\nfunction getMiddleware({\n  placement,\n  flipDisabled,\n  flipPlacements,\n  offsetDistance,\n  offsetSkidding,\n  arrowEl,\n  type,\n}: {\n  placement: LogicalPlacement;\n  flipDisabled?: boolean;\n  flipPlacements?: EffectivePlacement[];\n  offsetDistance?: number;\n  offsetSkidding?: number;\n  arrowEl?: SVGSVGElement;\n  type: UIType;\n}): Middleware[] {\n  const defaultMiddleware = [shift(), hide()];\n\n  if (type === \"menu\") {\n    return [\n      ...defaultMiddleware,\n      flip({\n        fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"],\n      }),\n    ];\n  }\n\n  if (type === \"popover\" || type === \"tooltip\") {\n    const middleware: Middleware[] = [\n      ...defaultMiddleware,\n      offset({\n        mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n        crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0,\n      }),\n    ];\n\n    if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n      middleware.push(\n        autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null }),\n      );\n    } else if (!flipDisabled) {\n      middleware.push(flip(flipPlacements ? { fallbackPlacements: flipPlacements } : {}));\n    }\n\n    if (arrowEl) {\n      middleware.push(\n        arrow({\n          element: arrowEl,\n        }),\n      );\n    }\n\n    return middleware;\n  }\n\n  return [];\n}\n\nexport function filterValidFlipPlacements(placements: string[], el: HTMLElement): EffectivePlacement[] {\n  const filteredPlacements = placements.filter((placement: EffectivePlacement) =>\n    flipPlacements.includes(placement),\n  ) as EffectivePlacement[];\n\n  if (filteredPlacements.length !== placements.length) {\n    console.warn(\n      `${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${flipPlacements\n        .map((placement) => `\"${placement}\"`)\n        .join(\", \")\n        .trim()}`,\n      { el },\n    );\n  }\n\n  return filteredPlacements;\n}\n\nexport function getEffectivePlacement(placement: LogicalPlacement, isRTL = false): EffectivePlacement {\n  const placements = [\"left\", \"right\"];\n\n  if (isRTL) {\n    placements.reverse();\n  }\n\n  return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]) as EffectivePlacement;\n}\n\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component - A floating-ui component.\n * @param options - Reposition parameters.\n * @param options.referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param options.floatingEl - The `floatingElement` containing the floating ui.\n * @param options.overlayPositioning - type of positioning to use for the overlaid content.\n * @param options.placement - Determines where the component will be positioned relative to the `referenceElement`.\n * @param options.flipDisabled - Prevents flipping the component's placement when overlapping its `referenceElement`.\n * @param options.flipPlacements - Defines the available placements that can be used when a flip occurs.\n * @param options.offsetDistance - Offsets the position of the popover away from the `referenceElement`.\n * @param options.offsetSkidding - Offsets the position of the component along the `referenceElement`.\n * @param options.arrowEl - A customizable arrow element.\n * @param options.type - The type of floating UI.\n * @param delayed - Reposition the component after a delay.\n * @returns {Promise<void>}\n */\nexport async function reposition(\n  component: FloatingUIComponent,\n  options: Parameters<typeof positionFloatingUI>[1],\n  delayed = false,\n): Promise<void> {\n  if (!component.open || !options.floatingEl || !options.referenceEl) {\n    return;\n  }\n\n  const trackedState = autoUpdatingComponentMap.get(component);\n\n  if (!trackedState) {\n    return runAutoUpdate(component, options.referenceEl, options.floatingEl);\n  }\n\n  const positionFunction = delayed ? getDebouncedReposition(component) : positionFloatingUI;\n\n  await positionFunction(component, options);\n}\n\nfunction getDebouncedReposition(component: FloatingUIComponent): DebouncedFunc<typeof positionFloatingUI> {\n  let debounced = componentToDebouncedRepositionMap.get(component);\n\n  if (debounced) {\n    return debounced;\n  }\n\n  debounced = debounce(positionFloatingUI, DEBOUNCE.reposition, {\n    leading: true,\n    maxWait: DEBOUNCE.reposition,\n  });\n\n  componentToDebouncedRepositionMap.set(component, debounced);\n\n  return debounced;\n}\n\nconst ARROW_CSS_TRANSFORM = {\n  top: \"\",\n  left: \"rotate(-90deg)\",\n  bottom: \"rotate(180deg)\",\n  right: \"rotate(90deg)\",\n};\n\ntype PendingFloatingUIState = {\n  state: \"pending\";\n};\n\ntype ActiveFloatingUIState = {\n  state: \"active\";\n  cleanUp: () => void;\n};\n\ntype TrackedFloatingUIState = PendingFloatingUIState | ActiveFloatingUIState;\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const autoUpdatingComponentMap = new WeakMap<FloatingUIComponent, TrackedFloatingUIState>();\n\nconst componentToDebouncedRepositionMap = new WeakMap<FloatingUIComponent, DebouncedFunc<typeof positionFloatingUI>>();\n\nasync function runAutoUpdate(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): Promise<void> {\n  if (!floatingEl.isConnected) {\n    return;\n  }\n\n  const effectiveAutoUpdate = isBrowser()\n    ? autoUpdate\n    : (_refEl: HTMLElement, _floatingEl: HTMLElement, updateCallback: () => void): (() => void) => {\n        updateCallback();\n        return () => {\n          /* noop */\n        };\n      };\n\n  // we set initial state here to make it available for `reposition` calls\n  autoUpdatingComponentMap.set(component, { state: \"pending\" });\n\n  let repositionPromise: Promise<void>;\n\n  const cleanUp = effectiveAutoUpdate(\n    referenceEl,\n    floatingEl,\n    // callback is invoked immediately\n    () => {\n      const promise = component.reposition();\n\n      if (!repositionPromise) {\n        repositionPromise = promise;\n      }\n    },\n  );\n\n  autoUpdatingComponentMap.set(component, { state: \"active\", cleanUp });\n\n  return repositionPromise;\n}\n\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nexport async function connectFloatingUI(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): Promise<void> {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n\n  disconnectFloatingUI(component, referenceEl, floatingEl);\n\n  Object.assign(floatingEl.style, {\n    visibility: \"hidden\",\n    pointerEvents: \"none\",\n\n    // initial positioning based on https://floating-ui.com/docs/computePosition#initial-layout\n    position: component.overlayPositioning,\n  });\n\n  if (!component.open) {\n    return;\n  }\n\n  return runAutoUpdate(component, referenceEl, floatingEl);\n}\n\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nexport function disconnectFloatingUI(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): void {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n\n  const trackedState = autoUpdatingComponentMap.get(component);\n\n  if (trackedState?.state === \"active\") {\n    trackedState.cleanUp();\n  }\n\n  autoUpdatingComponentMap.delete(component);\n\n  componentToDebouncedRepositionMap.get(component)?.cancel();\n  componentToDebouncedRepositionMap.delete(component);\n}\n\nconst visiblePointerSize = 4;\n\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nexport const defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n","import { readTask } from \"@stencil/core\";\nimport { whenTransitionDone } from \"./dom\";\n\n/**\n * Exported for testing purposes only\n */\nexport const internalReadTask = readTask;\n\n/**\n * Defines interface for components with open/close public emitter.\n * All implementations of this interface must handle the following events: `beforeOpen`, `open`, `beforeClose`, `close`.\n */\nexport interface OpenCloseComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When true, the component opens.\n   */\n  open?: boolean;\n\n  /**\n   * When true, the component is open.\n   */\n  opened?: boolean;\n\n  /**\n   *  Specifies the name of transitionProp.\n   */\n  transitionProp?: string;\n\n  /**\n   * Specifies property on which active transition is watched for.\n   */\n  openTransitionProp: string;\n\n  /**\n   * Specifies element that the transition is allowed to emit on.\n   */\n  transitionEl: HTMLElement;\n\n  /**\n   * Defines method for `beforeOpen` event handler.\n   */\n  onBeforeOpen: () => void;\n\n  /**\n   * Defines method for `open` event handler:\n   */\n  onOpen: () => void;\n\n  /**\n   * Defines method for `beforeClose` event handler:\n   */\n  onBeforeClose: () => void;\n\n  /**\n   * Defines method for `close` event handler:\n   */\n  onClose: () => void;\n}\n\nfunction isOpen(component: OpenCloseComponent): boolean {\n  return \"opened\" in component ? component.opened : component.open;\n}\n\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n */\nexport function onToggleOpenCloseComponent(component: OpenCloseComponent): void {\n  internalReadTask((): void => {\n    if (!component.transitionEl) {\n      return;\n    }\n\n    whenTransitionDone(\n      component.transitionEl,\n      component.openTransitionProp,\n      () => {\n        if (isOpen(component)) {\n          component.onBeforeOpen();\n        } else {\n          component.onBeforeClose();\n        }\n      },\n      () => {\n        if (isOpen(component)) {\n          component.onOpen();\n        } else {\n          component.onClose();\n        }\n      },\n    );\n  });\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n"],"names":["sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","replace","getPaddingObject","padding","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","hasWindow","window","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle$1","test","isTableElement","isTopLayer","selector","matches","e","isContainingBlock","elementOrCss","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","filter","willChange","contain","CSS","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","parent","Object","getPrototypeOf","getFrameElement","visualViewport","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","allowedPlacements","autoAlignment","detectOverflowOptions","placements$1","undefined","getPlacementList","currentIndex","index","currentPlacement","alignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","sort","a","b","resetPlacement","every","shift","checkMainAxis","checkCrossAxis","limiter","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","flip","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","oppositePlacement","getExpandedPlacements","push","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","hide","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition$1","flatTreeParent","style","tagName","offsetParentPolyfill","roundByDPR","dpr","devicePixelRatio","isBrowser","originalGetOffsetParent","positionFloatingUI","component","_ref2","floatingEl","overlayPositioning","flipDisabled","flipPlacements","offsetDistance","offsetSkidding","arrowEl","type","getElementDir","effectivePlacement","getEffectivePlacement","getMiddleware","ARROW_CSS_TRANSFORM","floatingLayout","assign","visibility","pointerEvents","setAttribute","placementDataAttribute","open","defaultMenuPlacement","defaultEndMenuPlacement","FloatingCSS","animation","animationActive","arrowStroke","_ref3","defaultMiddleware","filterValidFlipPlacements","filteredPlacements","console","warn","join","trim","arguments","reverse","reposition","delayed","autoUpdatingComponentMap","runAutoUpdate","positionFunction","debounced","componentToDebouncedRepositionMap","debounce","DEBOUNCE","leading","maxWait","getDebouncedReposition","WeakMap","isConnected","effectiveAutoUpdate","_refEl","_floatingEl","updateCallback","repositionPromise","cleanUp","promise","connectFloatingUI","disconnectFloatingUI","trackedState","delete","cancel","defaultOffsetDistance","ceil","hypot","internalReadTask","readTask","isOpen","opened","onToggleOpenCloseComponent","transitionEl","whenTransitionDone","openTransitionProp","onBeforeOpen","onBeforeClose","onOpen","onClose","freeGlobal$1","global","freeSelf","self","root$1","Function","Symbol$1","Symbol","objectProto$1","prototype","hasOwnProperty","nativeObjectToString$1","toString","symToStringTag$1","toStringTag","nativeObjectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","isOwn","call","tag","unmasked","getRawTag","objectToString","isObjectLike","symbolTag","isSymbol","reWhitespace","reTrimStart","baseTrim","string","charAt","trimmedEndIndex","isObject","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","now$1","Date","now","FUNC_ERROR_TEXT","nativeMax","nativeMin","func","wait","lastArgs","lastThis","timerId","lastCallTime","lastInvokeTime","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","isInvoking","leadingEdge","flush"],"sourceRoot":""}