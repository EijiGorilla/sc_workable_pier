"use strict";(self.webpackChunksc_workable_pier=self.webpackChunksc_workable_pier||[]).push([[5294],{5294:(e,r,t)=>{t.r(r),t.d(r,{default:()=>v});t(35238);var s,o=t(64681),i=t(66486),n=t(37267),l=t(52494),a=t(81633),c=t(59844),m=t(86866),f=t(99846),u=t(26855),p=t(35143),S=(t(76460),t(81806),t(47249),t(50076),t(6409)),d=t(85842),y=t(75116);let h=s=class extends y.A{constructor(){super(...arguments),this.type="identity"}clone(){return new s}};(0,p._)([(0,S.e)({IdentityXform:"identity"})],h.prototype,"type",void 0),h=s=(0,p._)([(0,d.$)("esri.layers.support.rasterTransforms.IdentityTransform")],h);const x=h;var O=t(29754);const J={GCSShiftXform:u.A,IdentityXform:x,PolynomialXform:O.A};Object.keys(J);function N(e){const r=e?.type;if(!r)return null;const t=J[e?.type];if(t){const r=new t;return r.read(e),r}return null}var k=t(20118),A=t(46533),b=t(76797),w=t(19247);class v{convertVectorFieldData(e){const r=i.A.fromJSON(e.pixelBlock),t=(0,f.FI)(r,e.type);return Promise.resolve(null!=t?t.toJSON():null)}computeStatisticsHistograms(e){const r=i.A.fromJSON(e.pixelBlock),t=(0,m.eH)(r);return Promise.resolve(t)}async decode(e){const r=await(0,n.D)(e.data,e.options);return r&&r.toJSON()}symbolize(e){e.pixelBlock=i.A.fromJSON(e.pixelBlock),e.extent=e.extent?b.A.fromJSON(e.extent):null;const r=this.symbolizer.symbolize(e);return Promise.resolve(null!=r?r.toJSON():null)}async updateSymbolizer(e){this.symbolizer=k.A.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=(0,a.vt)(e.rasterFunctionJSON)}async process(e){const r=this.rasterFunction.process({extent:b.A.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>null!=e?i.A.fromJSON(e):null)),primaryPixelSizes:e.primaryPixelSizes?.map((e=>null!=e?w.A.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return null!=r?r.toJSON():null}stretch(e){const r=this.symbolizer.simpleStretch(i.A.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r?.toJSON())}estimateStatisticsHistograms(e){const r=(0,m.f4)(i.A.fromJSON(e.srcPixelBlock));return Promise.resolve(r)}split(e){const r=(0,l.lD)(i.A.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,!1===e.useBilinear);return r&&r.forEach(((e,t)=>{r.set(t,e?.toJSON())})),Promise.resolve(r)}clipTile(e){const r=i.A.fromJSON(e.pixelBlock),t=(0,l.J$)({...e,pixelBlock:r});return Promise.resolve(t?.toJSON())}async mosaicAndTransform(e){const r=e.srcPixelBlocks.map((e=>e?new i.A(e):null)),t=(0,l.z7)(r,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let s,o=t;return e.coefs&&(o=(0,l.$i)(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(s=(0,l.QF)(e.destDimension,e.gcsGrid),o=(0,f.Y2)(o,e.isUV?"vector-uv":"vector-magdir",s)),{pixelBlock:o?.toJSON(),localNorthDirections:s}}async createFlowMesh(e,r){const t={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:s,indexData:o}=await(0,A.CW)(e.meshType,e.simulationSettings,t,r.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const r=b.A.fromJSON(e.projectedExtent),t=b.A.fromJSON(e.srcBufferExtent);let s=null;e.datumTransformationSteps&&(s=new o.A({steps:e.datumTransformationSteps})),(e.includeGCSGrid||(0,c.xh)(r.spatialReference,t.spatialReference,s))&&await(0,c.Hh)();const i=e.rasterTransform?N(e.rasterTransform):null;return(0,c.l0)({...e,projectedExtent:r,srcBufferExtent:t,datumTransformation:s,rasterTransform:i})}}}}]);
//# sourceMappingURL=5294.73024eb1.chunk.js.map