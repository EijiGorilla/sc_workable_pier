{"version":3,"file":"static/js/3794.4c6816ba.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/FloatingArrow.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action/action.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action/action.scss?tag=calcite-action&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/popover/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/popover/popover.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/popover/PopoverManager.ts","../node_modules/@esri/calcite-components/dist/components/src/components/popover/popover.scss?tag=calcite-popover&encapsulation=shadow"],"sourcesContent":["import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FloatingLayout } from \"../../utils/floating-ui\";\n\ninterface FloatingArrowProps extends JSXAttributes<SVGSVGElement> {\n  floatingLayout: FloatingLayout;\n}\n\nconst CSS = {\n  arrow: \"calcite-floating-ui-arrow\",\n  arrowStroke: \"calcite-floating-ui-arrow__stroke\",\n};\n\nconst DEFAULTS = {\n  width: 12,\n  height: 6,\n  strokeWidth: 1,\n};\n\n/**\n * Renders a SVG element to be used as a floating-ui arrow.\n *\n * This functional component should be rendered inside a `FloatingUIComponent` when it needs an arrow element.\n *\n * @param floatingLayout.floatingLayout\n * @param floatingLayout – The effective floating layout to render the arrow vertically or horizontally. Possible values: `vertical` or `horizontal`.\n *\n * See [floating-ui](https://github.com/Esri/calcite-design-system/blob/dev/src/utils/floating-ui.ts)\n * @param floatingLayout.key\n * @param floatingLayout.ref\n */\nexport const FloatingArrow: FunctionalComponent<FloatingArrowProps> = ({\n  floatingLayout,\n  key,\n  ref,\n}): VNode => {\n  const { width, height, strokeWidth } = DEFAULTS;\n  const svgX = width / 2;\n  const isVertical = floatingLayout === \"vertical\";\n\n  const dValue =\n    \"M0,0\" +\n    ` H${width}` +\n    ` L${width - svgX},${height}` +\n    ` Q${svgX},${height} ${svgX},${height}` +\n    \" Z\";\n\n  return (\n    <svg\n      aria-hidden=\"true\"\n      class={CSS.arrow}\n      height={width}\n      key={key}\n      ref={ref}\n      viewBox={`0 0 ${width} ${width + (!isVertical ? strokeWidth : 0)}`}\n      width={width + (isVertical ? strokeWidth : 0)}\n    >\n      {strokeWidth > 0 && (\n        <path\n          class={CSS.arrowStroke}\n          d={dValue}\n          fill=\"none\"\n          // Account for the stroke on the fill path rendered below.\n          stroke-width={strokeWidth + 1}\n        />\n      )}\n      {/* In Firefox, for left/right placements there's a ~0.5px gap where the\n  border can show through. Adding a stroke on the fill removes it. */}\n      <path d={dValue} stroke=\"none\" />\n    </svg>\n  );\n};\n","import { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends Pick<JSXBase.HTMLAttributes, \"class\" | \"key\"> {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children): VNode => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return (\n    <HeadingTag class={props.class} key={props.key}>\n      {children}\n    </HeadingTag>\n  );\n};\n","export const CSS = {\n  button: \"button\",\n  buttonTextVisible: \"button--text-visible\",\n  buttonCompact: \"button--compact\",\n  indicatorText: \"indicator-text\",\n  iconContainer: \"icon-container\",\n  slotContainer: \"slot-container\",\n  slotContainerHidden: \"slot-container--hidden\",\n  textContainer: \"text-container\",\n  textContainerVisible: \"text-container--visible\",\n  indicatorWithIcon: \"indicator-with-icon\",\n  indicatorWithoutIcon: \"indicator-without-icon\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n};\n","import {\n  Component,\n  Element,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { getIconScale } from \"../../utils/component\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Alignment, Appearance, Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { ActionMessages } from \"./assets/action/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a `calcite-icon`.\n * @slot tooltip - [Deprecated] Use the `calcite-tooltip` component instead.\n */\n@Component({\n  tag: \"calcite-action\",\n  styleUrl: \"action.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Action\n  implements InteractiveComponent, LocalizedComponent, T9nComponent, LoadableComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is highlighted.\n   */\n  @Prop({ reflect: true }) active = false;\n\n  /**\n   * Specifies the horizontal alignment of button elements with text content.\n   */\n  @Prop({ reflect: true }) alignment: Alignment;\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the side padding of the component is reduced.\n   *\n   * @deprecated No longer necessary.\n   */\n  @Prop({ reflect: true }) compact = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies an icon to display. */\n  @Prop() icon: IconNameOrString;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * When `true`, displays a visual indicator.\n   */\n  @Prop({ reflect: true }) indicator = false;\n\n  /**\n   * Specifies the label of the component. If no label is provided, the label inherits what's provided for the `text` prop.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies text that accompanies the icon.\n   */\n  @Prop() text!: string;\n\n  /**\n   * Indicates whether the text is displayed.\n   */\n  @Prop({ reflect: true }) textEnabled = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionElement;\n\n  buttonEl: HTMLButtonElement;\n\n  mutationObserver = createObserver(\"mutation\", () => forceUpdate(this));\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionMessages;\n\n  guid = `calcite-action-${guid()}`;\n\n  indicatorId = `${this.guid}-indicator`;\n\n  buttonId = `${this.guid}-button`;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (isBrowser()) {\n      await setUpMessages(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.buttonEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderTextContainer(): VNode {\n    const { text, textEnabled } = this;\n\n    const textContainerClasses = {\n      [CSS.textContainer]: true,\n      [CSS.textContainerVisible]: textEnabled,\n    };\n\n    return text ? (\n      <div class={textContainerClasses} key=\"text-container\">\n        {text}\n      </div>\n    ) : null;\n  }\n\n  renderIndicatorText(): VNode {\n    const { indicator, messages, indicatorId, buttonId } = this;\n    return (\n      <div\n        aria-labelledby={buttonId}\n        aria-live=\"polite\"\n        class={CSS.indicatorText}\n        id={indicatorId}\n        role=\"region\"\n      >\n        {indicator ? messages.indicator : null}\n      </div>\n    );\n  }\n\n  renderIconContainer(): VNode {\n    const { loading, icon, scale, el, iconFlipRtl, indicator } = this;\n    const loaderScale = scale === \"l\" ? \"l\" : \"m\";\n    const calciteLoaderNode = loading ? (\n      <calcite-loader inline label={this.messages.loading} scale={loaderScale} />\n    ) : null;\n    const calciteIconNode = icon ? (\n      <calcite-icon\n        class={{ [CSS.indicatorWithIcon]: indicator }}\n        flipRtl={iconFlipRtl}\n        icon={icon}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const iconNode = calciteLoaderNode || calciteIconNode;\n    const hasIconToDisplay = iconNode || el.children?.length;\n\n    const slotContainerNode = (\n      <div\n        class={{\n          [CSS.slotContainer]: true,\n          [CSS.slotContainerHidden]: loading,\n        }}\n      >\n        <slot />\n      </div>\n    );\n\n    return hasIconToDisplay ? (\n      <div aria-hidden=\"true\" class={CSS.iconContainer} key=\"icon-container\">\n        {iconNode}\n        {slotContainerNode}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const {\n      active,\n      compact,\n      disabled,\n      icon,\n      loading,\n      textEnabled,\n      label,\n      text,\n      indicator,\n      indicatorId,\n      buttonId,\n      messages,\n    } = this;\n    const labelFallback = label || text;\n    const ariaLabel = labelFallback\n      ? `${labelFallback}${indicator ? ` (${messages.indicator})` : \"\"}`\n      : \"\";\n\n    const buttonClasses = {\n      [CSS.button]: true,\n      [CSS.buttonTextVisible]: textEnabled,\n      [CSS.buttonCompact]: compact,\n    };\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <button\n            aria-busy={toAriaBoolean(loading)}\n            aria-controls={indicator ? indicatorId : null}\n            aria-label={ariaLabel}\n            aria-pressed={toAriaBoolean(active)}\n            class={buttonClasses}\n            disabled={disabled}\n            id={buttonId}\n            ref={(buttonEl): HTMLButtonElement => (this.buttonEl = buttonEl)}\n          >\n            {this.renderIconContainer()}\n            {this.renderTextContainer()}\n            {!icon && indicator && <div class={CSS.indicatorWithoutIcon} key=\"indicator-no-icon\" />}\n          </button>\n          <slot name={SLOTS.tooltip} onSlotchange={this.handleTooltipSlotChange} />\n          {this.renderIndicatorText()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el): el is HTMLCalciteTooltipElement => el?.matches(\"calcite-tooltip\"));\n\n    const tooltip = tooltips[0];\n\n    if (tooltip) {\n      tooltip.referenceElement = this.buttonEl;\n    }\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-indicator-color: Specifies the component's indicator color.\n * @prop --calcite-action-background-color: Specifies the component's background color.\n * @prop --calcite-action-background-color-hover: Specifies the component's background color when hovered or focused.\n * @prop --calcite-action-background-color-pressed: Specifies the component's background color when active.\n * @prop --calcite-action-corner-radius: Specifies the component's corner radius.\n * @prop --calcite-action-corner-radius-end-end: Specifies the component's corner radius end end.\n * @prop --calcite-action-corner-radius-end-start: Specifies the component's corner radius end start.\n * @prop --calcite-action-corner-radius-start-end: Specifies the component's corner radius start end.\n * @prop --calcite-action-corner-radius-start-start: Specifies the component's corner radius start start.\n * @prop --calcite-action-text-color: Specifies the component's text color.\n * @prop --calcite-action-text-color-pressed: Specifies the component's text color when hovered.\n */\n\n:host {\n  @extend %component-host;\n  @apply flex bg-transparent;\n}\n\n:host,\nbutton {\n  border-end-end-radius: var(\n    --calcite-action-corner-radius-end-end,\n    var(--calcite-action-corner-radius, var(--calcite-corner-radius))\n  );\n  border-end-start-radius: var(\n    --calcite-action-corner-radius-end-start,\n    var(--calcite-action-corner-radius, var(--calcite-corner-radius))\n  );\n  border-start-end-radius: var(\n    --calcite-action-corner-radius-start-end,\n    var(--calcite-action-corner-radius, var(--calcite-corner-radius))\n  );\n  border-start-start-radius: var(\n    --calcite-action-corner-radius-start-start,\n    var(--calcite-action-corner-radius, var(--calcite-corner-radius))\n  );\n}\n\n@mixin action-indicator() {\n  position: relative;\n  &::after {\n    content: \"\";\n    @apply absolute\n      h-2\n      w-2\n      rounded-full;\n    inset-block-end: calc(-0.275rem);\n    inset-inline-end: calc(-0.275rem);\n    background-color: var(--calcite-action-indicator-color, theme(\"colors.brand\"));\n  }\n}\n\n.button {\n  @apply focus-base\n    text-n2h\n    relative\n    m-0\n    flex\n    w-auto\n    cursor-pointer\n    items-center\n    justify-start\n    border-none\n    font-medium\n    font-sans;\n\n  background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));\n  color: var(--calcite-action-text-color, var(--calcite-color-text-3));\n  text-align: unset;\n  flex: 1 0 auto;\n\n  &:hover,\n  &:focus {\n    background-color: var(--calcite-action-background-color-hover, var(--calcite-color-foreground-2));\n    color: var(--calcite-action-text-color-pressed, var(--calcite-color-text-1));\n  }\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:active {\n    background-color: var(--calcite-action-background-color-pressed, var(--calcite-color-foreground-3));\n  }\n}\n\n.icon-container {\n  @apply pointer-events-none\n    m-0\n    flex\n    items-center\n    justify-center;\n  min-inline-size: theme(\"spacing.4\");\n  min-block-size: theme(\"spacing.6\");\n}\n\n.text-container {\n  @apply m-0\n    w-0\n    truncate\n    leading-6\n    opacity-0\n    transition-opacity\n    duration-150\n    ease-in-out;\n\n  transition-property: margin;\n  transition-property: inline-size;\n}\n\n.text-container--visible {\n  @apply w-auto flex-auto opacity-100;\n}\n\n:host([active]) {\n  .button {\n    &,\n    &:hover,\n    &:focus {\n      color: var(--calcite-action-text-color-pressed, var(--calcite-color-text-1));\n      background-color: var(--calcite-action-background-color-pressed, var(--calcite-color-foreground-3));\n    }\n\n    &:active {\n      background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));\n    }\n  }\n}\n\n:host([loading]) {\n  .button {\n    &:hover,\n    &:focus {\n      background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));\n    }\n  }\n\n  .text-container {\n    @apply opacity-disabled;\n  }\n\n  calcite-loader[inline] {\n    margin-inline-end: theme(\"spacing.0\");\n  }\n}\n\n:host([appearance=\"transparent\"]) {\n  .button {\n    @apply bg-transparent\n      transition-shadow\n      duration-150\n      ease-in-out;\n\n    &:hover,\n    &:focus {\n      background-color: var(--calcite-color-transparent-hover);\n    }\n\n    &:active {\n      background-color: var(--calcite-color-transparent-press);\n    }\n  }\n}\n\n:host([data-active]) .button {\n  @apply focus-inset;\n}\n\n:host([scale=\"s\"]) {\n  .button {\n    @apply text-n2h px-2 py-1 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.2\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  .button {\n    @apply text-n1h px-4 py-3 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.3\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  .button {\n    @apply text-0h p-5 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.4\");\n  }\n}\n\n:host([alignment=\"center\"]) .button {\n  @apply justify-center;\n}\n\n:host([alignment=\"end\"]) .button {\n  @apply justify-end;\n}\n\n:host([alignment=\"center\"]),\n:host([alignment=\"end\"]) {\n  .button .text-container--visible {\n    @apply flex-initial;\n  }\n}\n\n/* [Deprecated]  Compact */\n:host([scale=\"s\"][compact]) .button,\n:host([scale=\"m\"][compact]) .button,\n:host([scale=\"l\"][compact]) .button {\n  @apply px-0;\n}\n\n.slot-container {\n  @apply flex;\n}\n\n.slot-container--hidden {\n  @apply hidden;\n}\n\n.button--text-visible {\n  @apply w-full;\n}\n\n.indicator-with-icon {\n  @include action-indicator();\n}\n\n.indicator-without-icon {\n  @apply w-4 mx-1;\n  @include action-indicator();\n}\n\n.indicator-text {\n  @apply sr-only;\n}\n\n@include base-component();\n@include disabled {\n  .button,\n  .button:hover,\n  .button:focus {\n    @apply opacity-disabled bg-foreground-1 cursor-default;\n  }\n\n  &:host([active]) {\n    .button,\n    .button:hover,\n    .button:focus {\n      @apply opacity-disabled bg-foreground-3;\n    }\n  }\n}\n","export const CSS = {\n  container: \"container\",\n  imageContainer: \"image-container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContainer: \"headerContainer\",\n  headerContent: \"header-content\",\n  heading: \"heading\",\n};\n\nexport const defaultPopoverPlacement = \"auto\";\nexport const ARIA_CONTROLS = \"aria-controls\";\nexport const ARIA_EXPANDED = \"aria-expanded\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  connectFloatingUI,\n  defaultOffsetDistance,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FlipPlacement,\n  FloatingCSS,\n  FloatingLayout,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  ReferenceElement,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport { focusFirstTabbable, queryElementRoots, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\nimport { getIconScale } from \"../../utils/component\";\nimport PopoverManager from \"./PopoverManager\";\nimport { PopoverMessages } from \"./assets/popover/t9n\";\nimport { ARIA_CONTROLS, ARIA_EXPANDED, CSS, defaultPopoverPlacement } from \"./resources\";\n\nconst manager = new PopoverManager();\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-popover\",\n  styleUrl: \"popover.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Popover\n  implements\n    FloatingUIComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, clicking outside of the component automatically closes open `calcite-popover`s.\n   */\n  @Prop({ reflect: true }) autoClose = false;\n\n  /** When `true`, displays a close button within the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, prevents flipping the component's placement when overlapping its `referenceElement`.\n   */\n  @Prop({ reflect: true }) flipDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * When `true`, removes the caret pointer.\n   */\n  @Prop({ reflect: true }) pointerDisabled = false;\n\n  /**\n   * Specifies the component's fallback `placement` when it's initial or specified `placement` has insufficient space available.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PopoverMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PopoverMessages;\n\n  /**\n   * Offsets the position of the popover away from the `referenceElement`.\n   *\n   * @default 6\n   */\n  @Prop({ reflect: true }) offsetDistance = defaultOffsetDistance;\n\n  @Watch(\"offsetDistance\")\n  offsetDistanceOffsetHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Offsets the position of the component along the `referenceElement`.\n   */\n  @Prop({ reflect: true }) offsetSkidding = 0;\n\n  @Watch(\"offsetSkidding\")\n  offsetSkiddingHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, displays and positions the component.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    this.reposition(true);\n    this.setExpandedAttr();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = defaultPopoverPlacement;\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   *  The `referenceElement` used to position the component according to its `placement` value. Setting to an `HTMLElement` is preferred so the component does not need to query the DOM. However, a string `id` of the reference element can also be used.\n   */\n  @Prop() referenceElement!: ReferenceElement | string;\n\n  @Watch(\"referenceElement\")\n  referenceElementHandler(): void {\n    this.setUpReferenceElement();\n    this.reposition(true);\n  }\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * When `true`, disables automatically toggling the component when its `referenceElement` has been triggered.\n   *\n   * This property can be set to `true` to manage when the component is open.\n   */\n  @Prop({ reflect: true }) triggerDisabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePopoverElement;\n\n  mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.updateFocusTrapElements(),\n  );\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  @State() effectiveLocale = \"\";\n\n  @State() floatingLayout: FloatingLayout = \"vertical\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() effectiveReferenceElement: ReferenceElement;\n\n  @State() defaultMessages: PopoverMessages;\n\n  arrowEl: SVGSVGElement;\n\n  closeButtonEl: HTMLCalciteActionElement;\n\n  guid = `calcite-popover-${guid()}`;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  hasLoaded = false;\n\n  focusTrap: FocusTrap;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.setFilteredPlacements();\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n\n    // we set up the ref element in the next frame to ensure PopoverManager\n    // event handlers are invoked after connect (mainly for `components` output target)\n    requestAnimationFrame(() => this.setUpReferenceElement(this.hasLoaded));\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    if (this.referenceElement && !this.effectiveReferenceElement) {\n      this.setUpReferenceElement();\n    }\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n    this.hasLoaded = true;\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    this.removeReferences();\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    deactivateFocusTrap(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const {\n      el,\n      effectiveReferenceElement,\n      placement,\n      overlayPositioning,\n      flipDisabled,\n      filteredFlipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n    } = this;\n    return reposition(\n      this,\n      {\n        floatingEl: el,\n        referenceEl: effectiveReferenceElement,\n        overlayPositioning,\n        placement,\n        flipDisabled,\n        flipPlacements: filteredFlipPlacements,\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type: \"popover\",\n      },\n      delayed,\n    );\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    forceUpdate(this.el);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  setUpReferenceElement = (warn = true): void => {\n    this.removeReferences();\n    this.effectiveReferenceElement = this.getReferenceElement();\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n\n    const { el, referenceElement, effectiveReferenceElement } = this;\n    if (warn && referenceElement && !effectiveReferenceElement) {\n      console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n        el,\n      });\n    }\n\n    this.addReferences();\n  };\n\n  getId = (): string => {\n    return this.el.id || this.guid;\n  };\n\n  setExpandedAttr = (): void => {\n    const { effectiveReferenceElement, open } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_EXPANDED, toAriaBoolean(open));\n    }\n  };\n\n  addReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    const id = this.getId();\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_CONTROLS, id);\n    }\n\n    manager.registerElement(effectiveReferenceElement, this.el);\n    this.setExpandedAttr();\n  };\n\n  removeReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"removeAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.removeAttribute(ARIA_CONTROLS);\n      effectiveReferenceElement.removeAttribute(ARIA_EXPANDED);\n    }\n\n    manager.unregisterElement(effectiveReferenceElement);\n  };\n\n  getReferenceElement(): ReferenceElement {\n    const { referenceElement, el } = this;\n\n    return (\n      (typeof referenceElement === \"string\"\n        ? queryElementRoots(el, { id: referenceElement })\n        : referenceElement) || null\n    );\n  }\n\n  hide = (): void => {\n    this.open = false;\n  };\n\n  onBeforeOpen(): void {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calcitePopoverOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.calcitePopoverBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calcitePopoverClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  storeArrowEl = (el: SVGSVGElement): void => {\n    this.arrowEl = el;\n    this.reposition(true);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderCloseButton(): VNode {\n    const { messages, closable } = this;\n    return closable ? (\n      <div class={CSS.closeButtonContainer} key={CSS.closeButtonContainer}>\n        <calcite-action\n          appearance=\"transparent\"\n          class={CSS.closeButton}\n          onClick={this.hide}\n          ref={(closeButtonEl) => (this.closeButtonEl = closeButtonEl)}\n          scale={this.scale}\n          text={messages.close}\n        >\n          <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n        </calcite-action>\n      </div>\n    ) : null;\n  }\n\n  renderHeader(): VNode {\n    const { heading, headingLevel } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    return headingNode ? (\n      <div class={CSS.header} key={CSS.header}>\n        {headingNode}\n        {this.renderCloseButton()}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { effectiveReferenceElement, heading, label, open, pointerDisabled, floatingLayout } =\n      this;\n    const displayed = effectiveReferenceElement && open;\n    const hidden = !displayed;\n    const arrowNode = !pointerDisabled ? (\n      <FloatingArrow floatingLayout={floatingLayout} key=\"floating-arrow\" ref={this.storeArrowEl} />\n    ) : null;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        aria-live=\"polite\"\n        calcite-hydrated-hidden={hidden}\n        id={this.getId()}\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [FloatingCSS.animation]: true,\n            [FloatingCSS.animationActive]: displayed,\n          }}\n          ref={this.setTransitionEl}\n        >\n          {arrowNode}\n          <div\n            class={{\n              [CSS.hasHeader]: !!heading,\n              [CSS.headerContainer]: true,\n            }}\n          >\n            {this.renderHeader()}\n            <div class={CSS.content}>\n              <slot />\n            </div>\n            {!heading ? this.renderCloseButton() : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","import { ReferenceElement } from \"../../utils/floating-ui\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { isKeyboardTriggeredClick } from \"../../utils/dom\";\n\nexport default class PopoverManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  private registeredElements = new Map<ReferenceElement, HTMLCalcitePopoverElement>();\n\n  private registeredElementCount = 0;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  registerElement(referenceEl: ReferenceElement, popover: HTMLCalcitePopoverElement): void {\n    this.registeredElementCount++;\n\n    this.registeredElements.set(referenceEl, popover);\n\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n\n  unregisterElement(referenceEl: ReferenceElement): void {\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private queryPopover = (composedPath: EventTarget[]): HTMLCalcitePopoverElement => {\n    const { registeredElements } = this;\n\n    const registeredElement = (composedPath as HTMLElement[]).find((pathEl) => registeredElements.has(pathEl));\n\n    return registeredElements.get(registeredElement);\n  };\n\n  private togglePopovers = (event: KeyboardEvent | PointerEvent): void => {\n    const composedPath = event.composedPath();\n    const togglePopover = this.queryPopover(composedPath);\n\n    if (togglePopover && !togglePopover.triggerDisabled) {\n      togglePopover.open = !togglePopover.open;\n    }\n\n    Array.from(this.registeredElements.values())\n      .filter(\n        (popover) => popover !== togglePopover && popover.autoClose && popover.open && !composedPath.includes(popover),\n      )\n      .forEach((popover) => (popover.open = false));\n  };\n\n  private closeAllPopovers(): void {\n    Array.from(this.registeredElements.values()).forEach((popover) => (popover.open = false));\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      this.closeAllPopovers();\n    } else if (isActivationKey(event.key)) {\n      this.togglePopovers(event);\n    }\n  };\n\n  private clickHandler = (event: PointerEvent): void => {\n    if (isKeyboardTriggeredClick(event)) {\n      return;\n    }\n\n    this.togglePopovers(event);\n  };\n\n  private addListeners(): void {\n    window.addEventListener(\"click\", this.clickHandler);\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n\n  private removeListeners(): void {\n    window.removeEventListener(\"click\", this.clickHandler);\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-popover-background-color: Specifies the component's background color.\n * @prop --calcite-popover-border-color: Specifies the component's border color.\n * @prop --calcite-popover-corner-radius: Specifies the component's corner radius.\n * @prop --calcite-popover-text-color: Specifies the component's text color.\n * @prop --calcite-popover-z-index: Specifies the component's z-index value.\n */\n\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-popover-z-index, theme(\"zIndex.popover\"));\n}\n\n@include floating-ui-host();\n@include floating-ui-arrow();\n\n:host([scale=\"s\"]) {\n  .heading {\n    @apply text-n1-wrap\n    px-3\n    py-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .heading {\n    @apply text-0-wrap\n    px-4\n    py-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .heading {\n    @apply text-1-wrap\n    px-5\n    py-4;\n  }\n}\n\n:host {\n  @apply pointer-events-none;\n}\n\n:host([open]) {\n  pointer-events: initial;\n}\n\n.calcite-floating-ui-anim {\n  @apply border\n    border-solid;\n\n  background-color: var(--calcite-popover-background-color, var(--calcite-color-foreground-1));\n  border-color: var(--calcite-popover-border-color, var(--calcite-color-border-3));\n  border-radius: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));\n}\n\n.calcite-floating-ui-arrow {\n  fill: var(--calcite-popover-background-color, var(--calcite-color-foreground-1));\n}\n\n.calcite-floating-ui-arrow__stroke {\n  stroke: var(--calcite-popover-border-color, var(--calcite-color-border-3));\n}\n\n.header {\n  @apply flex\n    flex-auto\n    items-stretch\n    justify-start\n    border-0\n    border-b\n    border-solid;\n\n  border-block-end-color: var(--calcite-popover-border-color, var(--calcite-color-border-3));\n}\n\n.heading {\n  @apply word-break\n  m-0\n  block\n  flex-auto\n  self-center\n  whitespace-normal\n  font-medium;\n\n  color: var(--calcite-popover-text-color, var(--calcite-color-text-1));\n}\n\n.headerContainer {\n  @apply relative\n    flex\n    h-full\n    flex-row\n    flex-nowrap\n    rounded;\n  color: var(--calcite-popover-text-color, var(--calcite-color-text-1));\n\n  &.has-header {\n    @apply flex-col;\n  }\n}\n\n.content {\n  @apply word-break\n  flex\n  h-full\n  w-full\n  flex-col\n  flex-nowrap\n  self-center;\n}\n\n.close-button-container {\n  @apply flex overflow-hidden;\n  flex: 0 0 auto;\n  border-start-end-radius: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));\n  border-end-end-radius: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));\n  --calcite-action-corner-radius-start-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp));\n  --calcite-action-corner-radius-end-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp));\n}\n\n::slotted(calcite-panel),\n::slotted(calcite-flow) {\n  @apply h-full;\n}\n\n@include base-component();\n"],"names":["CSS","DEFAULTS","width","height","strokeWidth","FloatingArrow","_ref","floatingLayout","key","ref","svgX","isVertical","dValue","h","class","viewBox","d","fill","stroke","Heading","props","children","HeadingTag","level","SLOTS","Action","proxyCustomElement","HTMLElement","mutationObserver","createObserver","forceUpdate","this","guid","indicatorId","buttonId","handleTooltipSlotChange","event","tooltip","target","assignedElements","flatten","filter","el","matches","referenceElement","buttonEl","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectLocalized","connectMessages","observe","childList","subtree","componentWillLoad","setUpLoadableComponent","isBrowser","setUpMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnect","componentDidRender","updateHostInteraction","setFocus","componentFocusable","focus","renderTextContainer","text","textEnabled","textContainerClasses","renderIndicatorText","indicator","messages","id","role","renderIconContainer","loading","icon","scale","iconFlipRtl","loaderScale","calciteLoaderNode","inline","label","calciteIconNode","flipRtl","getIconScale","iconNode","hasIconToDisplay","length","slotContainerNode","render","active","compact","disabled","labelFallback","ariaLabel","buttonClasses","Host","InteractiveContainer","toAriaBoolean","name","onSlotchange","ARIA_CONTROLS","ARIA_EXPANDED","manager","constructor","registeredElements","Map","registeredElementCount","queryPopover","composedPath","registeredElement","find","pathEl","has","get","togglePopovers","togglePopover","triggerDisabled","open","Array","from","values","popover","autoClose","includes","forEach","keyDownHandler","defaultPrevented","closeAllPopovers","isActivationKey","clickHandler","isKeyboardTriggeredClick","registerElement","referenceEl","set","addListeners","unregisterElement","delete","removeListeners","window","addEventListener","removeEventListener","Popover","updateFocusTrapElements","openTransitionProp","hasLoaded","setTransitionEl","transitionEl","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","setUpReferenceElement","warn","arguments","undefined","_this","removeReferences","effectiveReferenceElement","getReferenceElement","connectFloatingUI","console","tagName","addReferences","getId","setExpandedAttr","setAttribute","removeAttribute","hide","storeArrowEl","arrowEl","reposition","defaultOffsetDistance","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","flipPlacementsHandler","offsetDistanceOffsetHandler","offsetSkiddingHandler","openHandler","onToggleOpenCloseComponent","overlayPositioningHandler","placementHandler","referenceElementHandler","connectFocusTrap","requestAnimationFrame","disconnectFloatingUI","delayed","placement","overlayPositioning","flipDisabled","offsetDistance","offsetSkidding","floatingEl","type","focusFirstTabbable","queryElementRoots","onBeforeOpen","calcitePopoverBeforeOpen","emit","onOpen","calcitePopoverOpen","onBeforeClose","calcitePopoverBeforeClose","onClose","calcitePopoverClose","renderCloseButton","closable","appearance","onClick","closeButtonEl","close","renderHeader","heading","headingLevel","headingNode","pointerDisabled","displayed","hidden","arrowNode","FloatingCSS","animation","animationActive"],"sourceRoot":""}